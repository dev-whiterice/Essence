[ @file = "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc"; @line = 1; @symbol_usingdef<0> = [Toybox,1,6,12]; @symbol_usingdef<1> = [System,1,13,19]; ]
using Toybox.System;
[ @file = "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc"; @line = 2; @symbol_usingdef<0> = [Toybox,2,6,12]; @symbol_usingdef<1> = [Complications,2,13,26]; ]
using Toybox.Complications;
[ @file = "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc"; @line = 3; @symbol_usingdef<0> = [Toybox,3,6,12]; @symbol_usingdef<1> = [Graphics,3,13,21]; ]
using Toybox.Graphics;
[ @file = "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc"; @line = 5; @position = 11; @symbol_vardef = [bboxes,5,11,17]; ]
var bboxes;
[ @file = "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc"; @line = 6; @position = 11; @symbol_vardef = [boundingBoxes,6,11,24]; ]
var boundingBoxes;
[ @file = "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc"; @line = 7; @position = 4; @symbol_vardef = [redrawLayout,7,4,16]; ]
var redrawLayout = false;
[ @file = "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc"; @line = 8; @position = 4; @symbol_vardef = [batterySave,8,4,15]; ]
var batterySave = false;
[ @file = "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc"; @line = 9; @position = 4; @symbol_vardef = [showGraph,9,4,13]; ]
var showGraph = 0;
[ @file = "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc"; @line = 10; @position = 4; @symbol_vardef = [graphSize,10,4,13]; ]
var graphSize = 0;
[ @file = "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc"; @line = 11; @position = 4; @symbol_vardef = [darkMode,11,4,12]; ]
var darkMode = true;
[ @file = "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc"; @line = 13; @symbol_functiondef = [checkBoundingBoxes,13,16,34]; @symbol_param<0> = [points,13,35,41]; ]
function checkBoundingBoxes(points) {
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_13_43_32_0_start:
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 14 2 ]
    for @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_14_2_30_2_for_test @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_14_2_30_2_for_incr @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_14_2_30_2_for_end;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_14_2_30_2_for_init:
    [ "_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_14_2_30_2_for_begin" "_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_14_2_30_2_for_end" ]
    %i.1 = local;
    symbol [ i %i.1 14 11 12 ];
    %tmp.1 = 0;
    lputv %i.1 %tmp.1;
    symbol [ i %i.1 14 11 12 ];
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_14_2_30_2_for_test:
    %tmp.2 = lgetv %i.1;
    symbol [ i %tmp.2 14 18 19 ];
    symbol [ boundingBoxes %tmp.4 14 22 35 ];
    %tmp.4 = getv ? :boundingBoxes;
    symbol [ size %tmp.5 14 36 40 ];
    %tmp.5 = getv function %tmp.4 :size;
    %tmp.6 = invoke %tmp.4 %tmp.5();
    %tmp.7 = lt %tmp.2 %tmp.6;
    bf %tmp.7 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_14_2_30_2_for_end;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_14_2_30_2_for_begin:
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_14_49_30_2_start:
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 15 4 ]
    [ "_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_14_49_30_2_start" "_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_14_49_30_2_stop" ]
    %currentBounds.2 = local;
    symbol [ currentBounds %currentBounds.2 15 8 21 ];
    symbol [ boundingBoxes %tmp.9 15 24 37 ];
    %tmp.9 = getv ? :boundingBoxes;
    %tmp.10 = lgetv %i.1;
    symbol [ i %tmp.10 15 38 39 ];
    %tmp.11 = agetv %tmp.9 %tmp.10;
    lputv %currentBounds.2 %tmp.11;
    symbol [ currentBounds %currentBounds.2 15 8 21 ];
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 16 4 ]
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_16_4_29_4_if_stmt:
    %tmp.12 = self;
    symbol [ checkBoundsForComplication %tmp.13 16 8 34 ];
    %tmp.13 = getv function %tmp.12 :checkBoundsForComplication;
    %tmp.14 = lgetv %points;
    symbol [ points %tmp.14 16 35 41 ];
    %tmp.15 = lgetv %currentBounds.2;
    symbol [ currentBounds %tmp.15 16 43 56 ];
    %tmp.16 = "bounds";
    %tmp.17 = agetv %tmp.15 %tmp.16;
    %tmp.18 = invoke %tmp.12 %tmp.13(%tmp.14, %tmp.17);
    bf %tmp.18 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_16_4_29_4_if_end;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_16_4_29_4_if_true:
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_16_69_29_4_start:
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 17 6 ]
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_17_6_28_6_if_stmt:
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_17_10_17_73_begin:
    symbol [ fieldLayout %tmp.20 17 10 21 ];
    %tmp.20 = getv ? :fieldLayout;
    %tmp.21 = lgetv %i.1;
    symbol [ i %tmp.21 17 22 23 ];
    %tmp.22 = agetv %tmp.20 %tmp.21;
    %tmp.23 = "id";
    %tmp.24 = agetv %tmp.22 %tmp.23;
    symbol [ equals %tmp.25 17 31 37 ];
    %tmp.25 = getv function %tmp.24 :equals;
    %tmp.26 = "FieldLowerCenter";
    %tmp.27 = invoke %tmp.24 %tmp.25(%tmp.26);
    bf %tmp.27 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_17_6_28_6_if_else_false;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_17_61_17_73_true:
    symbol [ showGraph %tmp.29 17 61 70 ];
    %tmp.29 = getv ? :showGraph;
    %tmp.30 = 0;
    %tmp.31 = gt %tmp.29 %tmp.30;
    push %tmp.31;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_17_61_17_73_end:
    %tmp.32 = phi [%tmp.27 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_17_10_17_73_begin] [%tmp.31 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_17_61_17_73_true] [%tmp.32 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_17_61_17_73_end];
    bf %tmp.32 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_17_6_28_6_if_else_false;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_17_6_28_6_if_true:
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_17_76_22_6_start:
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 18 8 ]
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_18_8_20_8_if_stmt:
    symbol [ graphCatalog %tmp.34 18 12 24 ];
    %tmp.34 = getv ? :graphCatalog;
    symbol [ showGraph %tmp.36 18 25 34 ];
    %tmp.36 = getv ? :showGraph;
    %tmp.37 = agetv %tmp.34 %tmp.36;
    %tmp.38 = "complicationId";
    %tmp.39 = agetv %tmp.37 %tmp.38;
    %tmp.40 = null;
    %tmp.41 = eq %tmp.39 %tmp.40;
    bf %tmp.41 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_18_8_20_8_if_end;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_18_8_20_8_if_true:
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_18_63_20_8_start:
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 19 10 ]
    %tmp.42 = false;
    ret %tmp.42;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_18_63_20_8_stop:
    goto @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_18_8_20_8_if_end;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_18_8_20_8_if_end:
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 21 8 ]
    symbol [ graphCatalog %tmp.44 21 15 27 ];
    %tmp.44 = getv ? :graphCatalog;
    symbol [ showGraph %tmp.46 21 28 37 ];
    %tmp.46 = getv ? :showGraph;
    %tmp.47 = agetv %tmp.44 %tmp.46;
    %tmp.48 = "complicationId";
    %tmp.49 = agetv %tmp.47 %tmp.48;
    ret %tmp.49;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_17_76_22_6_stop:
    goto @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_17_6_28_6_if_end;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_17_6_28_6_if_else_false:
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_22_13_28_6_start:
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 23 8 ]
    [ "_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_22_13_28_6_start" "_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_22_13_28_6_stop" ]
    %dataIndex.3 = local;
    symbol [ dataIndex %dataIndex.3 23 12 21 ];
    symbol [ fieldLayout %tmp.51 23 24 35 ];
    %tmp.51 = getv ? :fieldLayout;
    %tmp.52 = lgetv %i.1;
    symbol [ i %tmp.52 23 36 37 ];
    %tmp.53 = agetv %tmp.51 %tmp.52;
    %tmp.54 = "data";
    %tmp.55 = agetv %tmp.53 %tmp.54;
    lputv %dataIndex.3 %tmp.55;
    symbol [ dataIndex %dataIndex.3 23 12 21 ];
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 24 8 ]
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_24_8_26_8_if_stmt:
    symbol [ fieldCatalog %tmp.57 24 12 24 ];
    %tmp.57 = getv ? :fieldCatalog;
    %tmp.58 = lgetv %dataIndex.3;
    symbol [ dataIndex %tmp.58 24 25 34 ];
    %tmp.59 = agetv %tmp.57 %tmp.58;
    %tmp.60 = "complicationId";
    %tmp.61 = agetv %tmp.59 %tmp.60;
    %tmp.62 = null;
    %tmp.63 = eq %tmp.61 %tmp.62;
    bf %tmp.63 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_24_8_26_8_if_end;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_24_8_26_8_if_true:
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_24_63_26_8_start:
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 25 10 ]
    %tmp.64 = false;
    ret %tmp.64;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_24_63_26_8_stop:
    goto @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_24_8_26_8_if_end;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_24_8_26_8_if_end:
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 27 8 ]
    symbol [ fieldCatalog %tmp.66 27 15 27 ];
    %tmp.66 = getv ? :fieldCatalog;
    %tmp.67 = lgetv %dataIndex.3;
    symbol [ dataIndex %tmp.67 27 28 37 ];
    %tmp.68 = agetv %tmp.66 %tmp.67;
    %tmp.69 = "complicationId";
    %tmp.70 = agetv %tmp.68 %tmp.69;
    ret %tmp.70;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_22_13_28_6_stop:
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_17_6_28_6_if_end:
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_16_69_29_4_stop:
    goto @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_16_4_29_4_if_end;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_16_4_29_4_if_end:
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_14_49_30_2_stop:
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_14_2_30_2_for_incr:
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 14 ]
    %tmp.73 = lgetv %i.1;
    symbol [ i %tmp.73 14 44 45 ];
    %tmp.74 = add %tmp.73 1;
    lputv %i.1 %tmp.74;
    symbol [ i %i.1 14 44 45 ];
    goto @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_14_2_30_2_for_test;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_14_2_30_2_for_end:
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 31 2 ]
    %tmp.75 = false;
    ret %tmp.75;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_13_43_32_0_stop:
}
[ @file = "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc"; @line = 33; @symbol_functiondef = [checkBoundsForComplication,33,16,42]; @symbol_param<0> = [points,33,43,49]; @symbol_param<1> = [boundingBox,33,51,62]; ]
function checkBoundsForComplication(points, boundingBox) {
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_33_64_35_0_start:
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 34 2 ]
    %tmp.1 = self;
    symbol [ boxContains %tmp.2 34 9 20 ];
    %tmp.2 = getv function %tmp.1 :boxContains;
    %tmp.3 = lgetv %points;
    symbol [ points %tmp.3 34 21 27 ];
    %tmp.4 = lgetv %boundingBox;
    symbol [ boundingBox %tmp.4 34 29 40 ];
    %tmp.5 = 0;
    %tmp.6 = agetv %tmp.4 %tmp.5;
    %tmp.7 = lgetv %boundingBox;
    symbol [ boundingBox %tmp.7 34 45 56 ];
    %tmp.8 = 1;
    %tmp.9 = agetv %tmp.7 %tmp.8;
    %tmp.10 = invoke %tmp.1 %tmp.2(%tmp.3, %tmp.6, %tmp.9);
    ret %tmp.10;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_33_64_35_0_stop:
}
[ @file = "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc"; @line = 37; @symbol_functiondef = [boxContains,37,16,27]; @symbol_param<0> = [points,37,28,34]; @symbol_param<1> = [boxMinXY,37,36,44]; @symbol_param<2> = [boxMaxXY,37,46,54]; ]
function boxContains(points, boxMinXY, boxMaxXY) {
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_37_56_44_0_start:
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 38 2 ]
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_39_4_42_27_begin:
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_39_4_41_27_begin:
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_39_4_40_27_begin:
    %tmp.1 = lgetv %points;
    symbol [ points %tmp.1 39 4 10 ];
    %tmp.2 = 0;
    %tmp.3 = agetv %tmp.1 %tmp.2;
    %tmp.4 = lgetv %boxMaxXY;
    symbol [ boxMaxXY %tmp.4 39 17 25 ];
    %tmp.5 = 0;
    %tmp.6 = agetv %tmp.4 %tmp.5;
    %tmp.7 = lte %tmp.3 %tmp.6;
    %tmp.8 = dup %tmp.7;
    bf %tmp.8 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_40_4_40_27_end;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_40_4_40_27_true:
    %tmp.9 = lgetv %points;
    symbol [ points %tmp.9 40 4 10 ];
    %tmp.10 = 1;
    %tmp.11 = agetv %tmp.9 %tmp.10;
    %tmp.12 = lgetv %boxMaxXY;
    symbol [ boxMaxXY %tmp.12 40 17 25 ];
    %tmp.13 = 1;
    %tmp.14 = agetv %tmp.12 %tmp.13;
    %tmp.15 = lte %tmp.11 %tmp.14;
    %tmp.16 = and %tmp.7 %tmp.15;
    push %tmp.16;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_40_4_40_27_end:
    %tmp.17 = phi [%tmp.8 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_39_4_40_27_begin] [%tmp.16 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_40_4_40_27_true] [%tmp.17 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_40_4_40_27_end];
    %tmp.18 = dup %tmp.17;
    bf %tmp.18 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_41_4_41_27_end;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_41_4_41_27_true:
    %tmp.19 = lgetv %points;
    symbol [ points %tmp.19 41 4 10 ];
    %tmp.20 = 0;
    %tmp.21 = agetv %tmp.19 %tmp.20;
    %tmp.22 = lgetv %boxMinXY;
    symbol [ boxMinXY %tmp.22 41 17 25 ];
    %tmp.23 = 0;
    %tmp.24 = agetv %tmp.22 %tmp.23;
    %tmp.25 = gte %tmp.21 %tmp.24;
    %tmp.26 = and %tmp.17 %tmp.25;
    push %tmp.26;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_41_4_41_27_end:
    %tmp.27 = phi [%tmp.18 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_39_4_41_27_begin] [%tmp.26 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_41_4_41_27_true] [%tmp.27 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_41_4_41_27_end];
    %tmp.28 = dup %tmp.27;
    bf %tmp.28 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_42_4_42_27_end;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_42_4_42_27_true:
    %tmp.29 = lgetv %points;
    symbol [ points %tmp.29 42 4 10 ];
    %tmp.30 = 1;
    %tmp.31 = agetv %tmp.29 %tmp.30;
    %tmp.32 = lgetv %boxMinXY;
    symbol [ boxMinXY %tmp.32 42 17 25 ];
    %tmp.33 = 1;
    %tmp.34 = agetv %tmp.32 %tmp.33;
    %tmp.35 = gte %tmp.31 %tmp.34;
    %tmp.36 = and %tmp.27 %tmp.35;
    push %tmp.36;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_42_4_42_27_end:
    %tmp.37 = phi [%tmp.28 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_39_4_42_27_begin] [%tmp.36 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_42_4_42_27_true] [%tmp.37 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_42_4_42_27_end];
    ret %tmp.37;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_37_56_44_0_stop:
}
[ @file = "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc"; @line = 46; @position = 4; @symbol_vardef = [fieldLayout,46,4,15]; ]
var fieldLayout;
[ @file = "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc"; @line = 81; @position = 4; @symbol_vardef = [fieldCatalog,81,4,16]; ]
var fieldCatalog;
[ @file = "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc"; @line = 203; @position = 4; @symbol_vardef = [graphCatalog,203,4,16]; ]
var graphCatalog;
[ @file = "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc"; @line = 250; @symbol_functiondef = [loadLayout,250,9,19]; ]
function loadLayout() {
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_250_22_254_0_start:
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 251 2 ]
    for @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_251_2_253_2_for_test @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_251_2_253_2_for_incr @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_251_2_253_2_for_end;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_251_2_253_2_for_init:
    [ "_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_251_2_253_2_for_begin" "_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_251_2_253_2_for_end" ]
    %i.1 = local;
    symbol [ i %i.1 251 11 12 ];
    %tmp.1 = 0;
    lputv %i.1 %tmp.1;
    symbol [ i %i.1 251 11 12 ];
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_251_2_253_2_for_test:
    %tmp.2 = lgetv %i.1;
    symbol [ i %tmp.2 251 18 19 ];
    symbol [ fieldLayout %tmp.4 251 22 33 ];
    %tmp.4 = getv ? :fieldLayout;
    symbol [ size %tmp.5 251 34 38 ];
    %tmp.5 = getv function %tmp.4 :size;
    %tmp.6 = invoke %tmp.4 %tmp.5();
    %tmp.7 = lt %tmp.2 %tmp.6;
    bf %tmp.7 @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_251_2_253_2_for_end;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_251_2_253_2_for_begin:
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_251_53_253_2_start:
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 252 4 ]
    symbol [ fieldLayout %tmp.8 252 4 15 ];
    %tmp.8 = getv self :fieldLayout;
    %tmp.9 = lgetv %i.1;
    symbol [ i %tmp.9 252 16 17 ];
    %tmp.10 = agetv %tmp.8 %tmp.9;
    %tmp.11 = self;
    symbol [ getApp %tmp.12 252 29 35 ];
    %tmp.12 = getv function %tmp.11 :getApp;
    %tmp.13 = invoke %tmp.11 %tmp.12();
    symbol [ getProperty %tmp.14 252 38 49 ];
    %tmp.14 = getv function %tmp.13 :getProperty;
    symbol [ fieldLayout %tmp.16 252 50 61 ];
    %tmp.16 = getv ? :fieldLayout;
    %tmp.17 = lgetv %i.1;
    symbol [ i %tmp.17 252 62 63 ];
    %tmp.18 = agetv %tmp.16 %tmp.17;
    %tmp.19 = "id";
    %tmp.20 = agetv %tmp.18 %tmp.19;
    %tmp.21 = invoke %tmp.13 %tmp.14(%tmp.20);
    %tmp.22 = "data";
    aputv %tmp.10 %tmp.22 %tmp.21;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_251_53_253_2_stop:
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_251_2_253_2_for_incr:
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 251 ]
    %tmp.23 = lgetv %i.1;
    symbol [ i %tmp.23 251 46 47 ];
    %tmp.24 = 1;
    %tmp.25 = add %tmp.23 %tmp.24;
    lputv %i.1 %tmp.25;
    symbol [ i %i.1 251 42 43 ];
    goto @_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_251_2_253_2_for_test;
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_251_2_253_2_for_end:
_Users_mattia_development_project_monkey_c_Essence_source_Globals_mc_250_22_254_0_stop:
}
[ @file = "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc"; @line = 1; ]
<init> {
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 5 11 ]
    %tmp.26 = newa 0;
    putv self :bboxes %tmp.26;
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 6 11 ]
    %tmp.27 = newa 0;
    putv self :boundingBoxes %tmp.27;
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 46 4 ]
    %tmp.28 = newa 8;
    %tmp.29 = newd 2;
    %tmp.30 = "id";
    %tmp.31 = "FieldTop";
    %tmp.32 = dup %tmp.29;
    %tmp.33 = aputv %tmp.32 %tmp.30 %tmp.31;
    %tmp.34 = "data";
    %tmp.35 = 0;
    %tmp.36 = dup %tmp.33;
    %tmp.37 = aputv %tmp.36 %tmp.34 %tmp.35;
    %tmp.38 = dup %tmp.28;
    %tmp.39 = aputv %tmp.38 0 %tmp.37;
    %tmp.40 = newd 2;
    %tmp.41 = "id";
    %tmp.42 = "FieldUpperLeft";
    %tmp.43 = dup %tmp.40;
    %tmp.44 = aputv %tmp.43 %tmp.41 %tmp.42;
    %tmp.45 = "data";
    %tmp.46 = 1;
    %tmp.47 = dup %tmp.44;
    %tmp.48 = aputv %tmp.47 %tmp.45 %tmp.46;
    %tmp.49 = dup %tmp.39;
    %tmp.50 = aputv %tmp.49 1 %tmp.48;
    %tmp.51 = newd 2;
    %tmp.52 = "id";
    %tmp.53 = "FieldUpperCenter";
    %tmp.54 = dup %tmp.51;
    %tmp.55 = aputv %tmp.54 %tmp.52 %tmp.53;
    %tmp.56 = "data";
    %tmp.57 = 2;
    %tmp.58 = dup %tmp.55;
    %tmp.59 = aputv %tmp.58 %tmp.56 %tmp.57;
    %tmp.60 = dup %tmp.50;
    %tmp.61 = aputv %tmp.60 2 %tmp.59;
    %tmp.62 = newd 2;
    %tmp.63 = "id";
    %tmp.64 = "FieldUpperRight";
    %tmp.65 = dup %tmp.62;
    %tmp.66 = aputv %tmp.65 %tmp.63 %tmp.64;
    %tmp.67 = "data";
    %tmp.68 = 3;
    %tmp.69 = dup %tmp.66;
    %tmp.70 = aputv %tmp.69 %tmp.67 %tmp.68;
    %tmp.71 = dup %tmp.61;
    %tmp.72 = aputv %tmp.71 3 %tmp.70;
    %tmp.73 = newd 2;
    %tmp.74 = "id";
    %tmp.75 = "FieldLowerLeft";
    %tmp.76 = dup %tmp.73;
    %tmp.77 = aputv %tmp.76 %tmp.74 %tmp.75;
    %tmp.78 = "data";
    %tmp.79 = 4;
    %tmp.80 = dup %tmp.77;
    %tmp.81 = aputv %tmp.80 %tmp.78 %tmp.79;
    %tmp.82 = dup %tmp.72;
    %tmp.83 = aputv %tmp.82 4 %tmp.81;
    %tmp.84 = newd 2;
    %tmp.85 = "id";
    %tmp.86 = "FieldLowerCenter";
    %tmp.87 = dup %tmp.84;
    %tmp.88 = aputv %tmp.87 %tmp.85 %tmp.86;
    %tmp.89 = "data";
    %tmp.90 = 5;
    %tmp.91 = dup %tmp.88;
    %tmp.92 = aputv %tmp.91 %tmp.89 %tmp.90;
    %tmp.93 = dup %tmp.83;
    %tmp.94 = aputv %tmp.93 5 %tmp.92;
    %tmp.95 = newd 2;
    %tmp.96 = "id";
    %tmp.97 = "FieldLowerRight";
    %tmp.98 = dup %tmp.95;
    %tmp.99 = aputv %tmp.98 %tmp.96 %tmp.97;
    %tmp.100 = "data";
    %tmp.101 = 6;
    %tmp.102 = dup %tmp.99;
    %tmp.103 = aputv %tmp.102 %tmp.100 %tmp.101;
    %tmp.104 = dup %tmp.94;
    %tmp.105 = aputv %tmp.104 6 %tmp.103;
    %tmp.106 = newd 2;
    %tmp.107 = "id";
    %tmp.108 = "FieldBottom";
    %tmp.109 = dup %tmp.106;
    %tmp.110 = aputv %tmp.109 %tmp.107 %tmp.108;
    %tmp.111 = "data";
    %tmp.112 = 7;
    %tmp.113 = dup %tmp.110;
    %tmp.114 = aputv %tmp.113 %tmp.111 %tmp.112;
    %tmp.115 = dup %tmp.105;
    %tmp.116 = aputv %tmp.115 7 %tmp.114;
    putv self :fieldLayout %tmp.116;
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 81 4 ]
    %tmp.117 = newa 17;
    %tmp.118 = newd 5;
    %tmp.119 = "id";
    %tmp.120 = "Empty";
    %tmp.121 = dup %tmp.118;
    %tmp.122 = aputv %tmp.121 %tmp.119 %tmp.120;
    %tmp.123 = "label";
    symbol [ Rez %tmp.125 84 15 18 ];
    %tmp.125 = getv ? :Rez;
    symbol [ Strings %tmp.126 84 19 26 ];
    %tmp.126 = getv %tmp.125 :Strings;
    symbol [ Empty %tmp.127 84 27 32 ];
    %tmp.127 = getv %tmp.126 :Empty;
    %tmp.128 = dup %tmp.122;
    %tmp.129 = aputv %tmp.128 %tmp.123 %tmp.127;
    %tmp.130 = "labelExt";
    symbol [ Rez %tmp.132 85 18 21 ];
    %tmp.132 = getv ? :Rez;
    symbol [ Strings %tmp.133 85 22 29 ];
    %tmp.133 = getv %tmp.132 :Strings;
    symbol [ EmptyExt %tmp.134 85 30 38 ];
    %tmp.134 = getv %tmp.133 :EmptyExt;
    %tmp.135 = dup %tmp.129;
    %tmp.136 = aputv %tmp.135 %tmp.130 %tmp.134;
    %tmp.137 = "getter";
    %tmp.139 = const :getEmpty;
    symbol [ getEmpty %tmp.139 86 17 25 const ];
    %tmp.140 = dup %tmp.136;
    %tmp.141 = aputv %tmp.140 %tmp.137 %tmp.139;
    %tmp.142 = "complicationId";
    %tmp.143 = null;
    %tmp.144 = dup %tmp.141;
    %tmp.145 = aputv %tmp.144 %tmp.142 %tmp.143;
    %tmp.146 = dup %tmp.117;
    %tmp.147 = aputv %tmp.146 0 %tmp.145;
    %tmp.148 = newd 5;
    %tmp.149 = "id";
    %tmp.150 = "Weather";
    %tmp.151 = dup %tmp.148;
    %tmp.152 = aputv %tmp.151 %tmp.149 %tmp.150;
    %tmp.153 = "label";
    symbol [ Rez %tmp.155 91 15 18 ];
    %tmp.155 = getv ? :Rez;
    symbol [ Strings %tmp.156 91 19 26 ];
    %tmp.156 = getv %tmp.155 :Strings;
    symbol [ Weather %tmp.157 91 27 34 ];
    %tmp.157 = getv %tmp.156 :Weather;
    %tmp.158 = dup %tmp.152;
    %tmp.159 = aputv %tmp.158 %tmp.153 %tmp.157;
    %tmp.160 = "labelExt";
    symbol [ Rez %tmp.162 92 18 21 ];
    %tmp.162 = getv ? :Rez;
    symbol [ Strings %tmp.163 92 22 29 ];
    %tmp.163 = getv %tmp.162 :Strings;
    symbol [ WeatherExt %tmp.164 92 30 40 ];
    %tmp.164 = getv %tmp.163 :WeatherExt;
    %tmp.165 = dup %tmp.159;
    %tmp.166 = aputv %tmp.165 %tmp.160 %tmp.164;
    %tmp.167 = "getter";
    %tmp.169 = const :getWeather;
    symbol [ getWeather %tmp.169 93 17 27 const ];
    %tmp.170 = dup %tmp.166;
    %tmp.171 = aputv %tmp.170 %tmp.167 %tmp.169;
    %tmp.172 = "complicationId";
    symbol [ Complications %tmp.173 94 24 37 ];
    %tmp.173 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_CURRENT_WEATHER %tmp.174 94 38 71 ];
    %tmp.174 = getv %tmp.173 :COMPLICATION_TYPE_CURRENT_WEATHER;
    %tmp.175 = dup %tmp.171;
    %tmp.176 = aputv %tmp.175 %tmp.172 %tmp.174;
    %tmp.177 = dup %tmp.147;
    %tmp.178 = aputv %tmp.177 1 %tmp.176;
    %tmp.179 = newd 5;
    %tmp.180 = "id";
    %tmp.181 = "Calendar";
    %tmp.182 = dup %tmp.179;
    %tmp.183 = aputv %tmp.182 %tmp.180 %tmp.181;
    %tmp.184 = "label";
    symbol [ Rez %tmp.186 98 15 18 ];
    %tmp.186 = getv ? :Rez;
    symbol [ Strings %tmp.187 98 19 26 ];
    %tmp.187 = getv %tmp.186 :Strings;
    symbol [ Calendar %tmp.188 98 27 35 ];
    %tmp.188 = getv %tmp.187 :Calendar;
    %tmp.189 = dup %tmp.183;
    %tmp.190 = aputv %tmp.189 %tmp.184 %tmp.188;
    %tmp.191 = "labelExt";
    symbol [ Rez %tmp.193 99 18 21 ];
    %tmp.193 = getv ? :Rez;
    symbol [ Strings %tmp.194 99 22 29 ];
    %tmp.194 = getv %tmp.193 :Strings;
    symbol [ CalendarExt %tmp.195 99 30 41 ];
    %tmp.195 = getv %tmp.194 :CalendarExt;
    %tmp.196 = dup %tmp.190;
    %tmp.197 = aputv %tmp.196 %tmp.191 %tmp.195;
    %tmp.198 = "getter";
    %tmp.200 = const :getCalendar;
    symbol [ getCalendar %tmp.200 100 17 28 const ];
    %tmp.201 = dup %tmp.197;
    %tmp.202 = aputv %tmp.201 %tmp.198 %tmp.200;
    %tmp.203 = "complicationId";
    symbol [ Complications %tmp.204 101 24 37 ];
    %tmp.204 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_CALENDAR_EVENTS %tmp.205 101 38 71 ];
    %tmp.205 = getv %tmp.204 :COMPLICATION_TYPE_CALENDAR_EVENTS;
    %tmp.206 = dup %tmp.202;
    %tmp.207 = aputv %tmp.206 %tmp.203 %tmp.205;
    %tmp.208 = dup %tmp.178;
    %tmp.209 = aputv %tmp.208 2 %tmp.207;
    %tmp.210 = newd 5;
    %tmp.211 = "id";
    %tmp.212 = "Notifications";
    %tmp.213 = dup %tmp.210;
    %tmp.214 = aputv %tmp.213 %tmp.211 %tmp.212;
    %tmp.215 = "label";
    symbol [ Rez %tmp.217 105 15 18 ];
    %tmp.217 = getv ? :Rez;
    symbol [ Strings %tmp.218 105 19 26 ];
    %tmp.218 = getv %tmp.217 :Strings;
    symbol [ Notifications %tmp.219 105 27 40 ];
    %tmp.219 = getv %tmp.218 :Notifications;
    %tmp.220 = dup %tmp.214;
    %tmp.221 = aputv %tmp.220 %tmp.215 %tmp.219;
    %tmp.222 = "labelExt";
    symbol [ Rez %tmp.224 106 18 21 ];
    %tmp.224 = getv ? :Rez;
    symbol [ Strings %tmp.225 106 22 29 ];
    %tmp.225 = getv %tmp.224 :Strings;
    symbol [ NotificationsExt %tmp.226 106 30 46 ];
    %tmp.226 = getv %tmp.225 :NotificationsExt;
    %tmp.227 = dup %tmp.221;
    %tmp.228 = aputv %tmp.227 %tmp.222 %tmp.226;
    %tmp.229 = "getter";
    %tmp.231 = const :getNotifications;
    symbol [ getNotifications %tmp.231 107 17 33 const ];
    %tmp.232 = dup %tmp.228;
    %tmp.233 = aputv %tmp.232 %tmp.229 %tmp.231;
    %tmp.234 = "complicationId";
    symbol [ Complications %tmp.235 108 24 37 ];
    %tmp.235 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_NOTIFICATION_COUNT %tmp.236 108 38 74 ];
    %tmp.236 = getv %tmp.235 :COMPLICATION_TYPE_NOTIFICATION_COUNT;
    %tmp.237 = dup %tmp.233;
    %tmp.238 = aputv %tmp.237 %tmp.234 %tmp.236;
    %tmp.239 = dup %tmp.209;
    %tmp.240 = aputv %tmp.239 3 %tmp.238;
    %tmp.241 = newd 5;
    %tmp.242 = "id";
    %tmp.243 = "SunEvent";
    %tmp.244 = dup %tmp.241;
    %tmp.245 = aputv %tmp.244 %tmp.242 %tmp.243;
    %tmp.246 = "label";
    symbol [ Rez %tmp.248 112 15 18 ];
    %tmp.248 = getv ? :Rez;
    symbol [ Strings %tmp.249 112 19 26 ];
    %tmp.249 = getv %tmp.248 :Strings;
    symbol [ SunEvent %tmp.250 112 27 35 ];
    %tmp.250 = getv %tmp.249 :SunEvent;
    %tmp.251 = dup %tmp.245;
    %tmp.252 = aputv %tmp.251 %tmp.246 %tmp.250;
    %tmp.253 = "labelExt";
    symbol [ Rez %tmp.255 113 18 21 ];
    %tmp.255 = getv ? :Rez;
    symbol [ Strings %tmp.256 113 22 29 ];
    %tmp.256 = getv %tmp.255 :Strings;
    symbol [ SunEventExt %tmp.257 113 30 41 ];
    %tmp.257 = getv %tmp.256 :SunEventExt;
    %tmp.258 = dup %tmp.252;
    %tmp.259 = aputv %tmp.258 %tmp.253 %tmp.257;
    %tmp.260 = "getter";
    %tmp.262 = const :getSunEvent;
    symbol [ getSunEvent %tmp.262 114 17 28 const ];
    %tmp.263 = dup %tmp.259;
    %tmp.264 = aputv %tmp.263 %tmp.260 %tmp.262;
    %tmp.265 = "complicationId";
    symbol [ Complications %tmp.266 115 24 37 ];
    %tmp.266 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_SUNRISE %tmp.267 115 38 63 ];
    %tmp.267 = getv %tmp.266 :COMPLICATION_TYPE_SUNRISE;
    %tmp.268 = dup %tmp.264;
    %tmp.269 = aputv %tmp.268 %tmp.265 %tmp.267;
    %tmp.270 = dup %tmp.240;
    %tmp.271 = aputv %tmp.270 4 %tmp.269;
    %tmp.272 = newd 5;
    %tmp.273 = "id";
    %tmp.274 = "Altimeter";
    %tmp.275 = dup %tmp.272;
    %tmp.276 = aputv %tmp.275 %tmp.273 %tmp.274;
    %tmp.277 = "label";
    symbol [ Rez %tmp.279 119 15 18 ];
    %tmp.279 = getv ? :Rez;
    symbol [ Strings %tmp.280 119 19 26 ];
    %tmp.280 = getv %tmp.279 :Strings;
    symbol [ Altimeter %tmp.281 119 27 36 ];
    %tmp.281 = getv %tmp.280 :Altimeter;
    %tmp.282 = dup %tmp.276;
    %tmp.283 = aputv %tmp.282 %tmp.277 %tmp.281;
    %tmp.284 = "labelExt";
    symbol [ Rez %tmp.286 120 18 21 ];
    %tmp.286 = getv ? :Rez;
    symbol [ Strings %tmp.287 120 22 29 ];
    %tmp.287 = getv %tmp.286 :Strings;
    symbol [ AltimeterExt %tmp.288 120 30 42 ];
    %tmp.288 = getv %tmp.287 :AltimeterExt;
    %tmp.289 = dup %tmp.283;
    %tmp.290 = aputv %tmp.289 %tmp.284 %tmp.288;
    %tmp.291 = "getter";
    %tmp.293 = const :getAltimeter;
    symbol [ getAltimeter %tmp.293 121 17 29 const ];
    %tmp.294 = dup %tmp.290;
    %tmp.295 = aputv %tmp.294 %tmp.291 %tmp.293;
    %tmp.296 = "complicationId";
    symbol [ Complications %tmp.297 122 24 37 ];
    %tmp.297 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_ALTITUDE %tmp.298 122 38 64 ];
    %tmp.298 = getv %tmp.297 :COMPLICATION_TYPE_ALTITUDE;
    %tmp.299 = dup %tmp.295;
    %tmp.300 = aputv %tmp.299 %tmp.296 %tmp.298;
    %tmp.301 = dup %tmp.271;
    %tmp.302 = aputv %tmp.301 5 %tmp.300;
    %tmp.303 = newd 5;
    %tmp.304 = "id";
    %tmp.305 = "HeartRate";
    %tmp.306 = dup %tmp.303;
    %tmp.307 = aputv %tmp.306 %tmp.304 %tmp.305;
    %tmp.308 = "label";
    symbol [ Rez %tmp.310 126 15 18 ];
    %tmp.310 = getv ? :Rez;
    symbol [ Strings %tmp.311 126 19 26 ];
    %tmp.311 = getv %tmp.310 :Strings;
    symbol [ HeartRate %tmp.312 126 27 36 ];
    %tmp.312 = getv %tmp.311 :HeartRate;
    %tmp.313 = dup %tmp.307;
    %tmp.314 = aputv %tmp.313 %tmp.308 %tmp.312;
    %tmp.315 = "labelExt";
    symbol [ Rez %tmp.317 127 18 21 ];
    %tmp.317 = getv ? :Rez;
    symbol [ Strings %tmp.318 127 22 29 ];
    %tmp.318 = getv %tmp.317 :Strings;
    symbol [ HeartRateExt %tmp.319 127 30 42 ];
    %tmp.319 = getv %tmp.318 :HeartRateExt;
    %tmp.320 = dup %tmp.314;
    %tmp.321 = aputv %tmp.320 %tmp.315 %tmp.319;
    %tmp.322 = "getter";
    %tmp.324 = const :getHeartRate;
    symbol [ getHeartRate %tmp.324 128 17 29 const ];
    %tmp.325 = dup %tmp.321;
    %tmp.326 = aputv %tmp.325 %tmp.322 %tmp.324;
    %tmp.327 = "complicationId";
    symbol [ Complications %tmp.328 129 24 37 ];
    %tmp.328 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_HEART_RATE %tmp.329 129 38 66 ];
    %tmp.329 = getv %tmp.328 :COMPLICATION_TYPE_HEART_RATE;
    %tmp.330 = dup %tmp.326;
    %tmp.331 = aputv %tmp.330 %tmp.327 %tmp.329;
    %tmp.332 = dup %tmp.302;
    %tmp.333 = aputv %tmp.332 6 %tmp.331;
    %tmp.334 = newd 5;
    %tmp.335 = "id";
    %tmp.336 = "Barometer";
    %tmp.337 = dup %tmp.334;
    %tmp.338 = aputv %tmp.337 %tmp.335 %tmp.336;
    %tmp.339 = "label";
    symbol [ Rez %tmp.341 133 15 18 ];
    %tmp.341 = getv ? :Rez;
    symbol [ Strings %tmp.342 133 19 26 ];
    %tmp.342 = getv %tmp.341 :Strings;
    symbol [ Barometer %tmp.343 133 27 36 ];
    %tmp.343 = getv %tmp.342 :Barometer;
    %tmp.344 = dup %tmp.338;
    %tmp.345 = aputv %tmp.344 %tmp.339 %tmp.343;
    %tmp.346 = "labelExt";
    symbol [ Rez %tmp.348 134 18 21 ];
    %tmp.348 = getv ? :Rez;
    symbol [ Strings %tmp.349 134 22 29 ];
    %tmp.349 = getv %tmp.348 :Strings;
    symbol [ BarometerExt %tmp.350 134 30 42 ];
    %tmp.350 = getv %tmp.349 :BarometerExt;
    %tmp.351 = dup %tmp.345;
    %tmp.352 = aputv %tmp.351 %tmp.346 %tmp.350;
    %tmp.353 = "getter";
    %tmp.355 = const :getBarometer;
    symbol [ getBarometer %tmp.355 135 17 29 const ];
    %tmp.356 = dup %tmp.352;
    %tmp.357 = aputv %tmp.356 %tmp.353 %tmp.355;
    %tmp.358 = "complicationId";
    symbol [ Complications %tmp.359 136 24 37 ];
    %tmp.359 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_SEA_LEVEL_PRESSURE %tmp.360 136 38 74 ];
    %tmp.360 = getv %tmp.359 :COMPLICATION_TYPE_SEA_LEVEL_PRESSURE;
    %tmp.361 = dup %tmp.357;
    %tmp.362 = aputv %tmp.361 %tmp.358 %tmp.360;
    %tmp.363 = dup %tmp.333;
    %tmp.364 = aputv %tmp.363 7 %tmp.362;
    %tmp.365 = newd 5;
    %tmp.366 = "id";
    %tmp.367 = "Battery";
    %tmp.368 = dup %tmp.365;
    %tmp.369 = aputv %tmp.368 %tmp.366 %tmp.367;
    %tmp.370 = "label";
    symbol [ Rez %tmp.372 140 15 18 ];
    %tmp.372 = getv ? :Rez;
    symbol [ Strings %tmp.373 140 19 26 ];
    %tmp.373 = getv %tmp.372 :Strings;
    symbol [ Battery %tmp.374 140 27 34 ];
    %tmp.374 = getv %tmp.373 :Battery;
    %tmp.375 = dup %tmp.369;
    %tmp.376 = aputv %tmp.375 %tmp.370 %tmp.374;
    %tmp.377 = "labelExt";
    symbol [ Rez %tmp.379 141 18 21 ];
    %tmp.379 = getv ? :Rez;
    symbol [ Strings %tmp.380 141 22 29 ];
    %tmp.380 = getv %tmp.379 :Strings;
    symbol [ BatteryExt %tmp.381 141 30 40 ];
    %tmp.381 = getv %tmp.380 :BatteryExt;
    %tmp.382 = dup %tmp.376;
    %tmp.383 = aputv %tmp.382 %tmp.377 %tmp.381;
    %tmp.384 = "getter";
    %tmp.386 = const :getBattery;
    symbol [ getBattery %tmp.386 142 17 27 const ];
    %tmp.387 = dup %tmp.383;
    %tmp.388 = aputv %tmp.387 %tmp.384 %tmp.386;
    %tmp.389 = "complicationId";
    symbol [ Complications %tmp.390 143 24 37 ];
    %tmp.390 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_BATTERY %tmp.391 143 38 63 ];
    %tmp.391 = getv %tmp.390 :COMPLICATION_TYPE_BATTERY;
    %tmp.392 = dup %tmp.388;
    %tmp.393 = aputv %tmp.392 %tmp.389 %tmp.391;
    %tmp.394 = dup %tmp.364;
    %tmp.395 = aputv %tmp.394 8 %tmp.393;
    %tmp.396 = newd 5;
    %tmp.397 = "id";
    %tmp.398 = "Stress";
    %tmp.399 = dup %tmp.396;
    %tmp.400 = aputv %tmp.399 %tmp.397 %tmp.398;
    %tmp.401 = "label";
    symbol [ Rez %tmp.403 147 15 18 ];
    %tmp.403 = getv ? :Rez;
    symbol [ Strings %tmp.404 147 19 26 ];
    %tmp.404 = getv %tmp.403 :Strings;
    symbol [ Stress %tmp.405 147 27 33 ];
    %tmp.405 = getv %tmp.404 :Stress;
    %tmp.406 = dup %tmp.400;
    %tmp.407 = aputv %tmp.406 %tmp.401 %tmp.405;
    %tmp.408 = "labelExt";
    symbol [ Rez %tmp.410 148 18 21 ];
    %tmp.410 = getv ? :Rez;
    symbol [ Strings %tmp.411 148 22 29 ];
    %tmp.411 = getv %tmp.410 :Strings;
    symbol [ StressExt %tmp.412 148 30 39 ];
    %tmp.412 = getv %tmp.411 :StressExt;
    %tmp.413 = dup %tmp.407;
    %tmp.414 = aputv %tmp.413 %tmp.408 %tmp.412;
    %tmp.415 = "getter";
    %tmp.417 = const :getStress;
    symbol [ getStress %tmp.417 149 17 26 const ];
    %tmp.418 = dup %tmp.414;
    %tmp.419 = aputv %tmp.418 %tmp.415 %tmp.417;
    %tmp.420 = "complicationId";
    symbol [ Complications %tmp.421 150 24 37 ];
    %tmp.421 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_STRESS %tmp.422 150 38 62 ];
    %tmp.422 = getv %tmp.421 :COMPLICATION_TYPE_STRESS;
    %tmp.423 = dup %tmp.419;
    %tmp.424 = aputv %tmp.423 %tmp.420 %tmp.422;
    %tmp.425 = dup %tmp.395;
    %tmp.426 = aputv %tmp.425 9 %tmp.424;
    %tmp.427 = newd 5;
    %tmp.428 = "id";
    %tmp.429 = "BodyBattery";
    %tmp.430 = dup %tmp.427;
    %tmp.431 = aputv %tmp.430 %tmp.428 %tmp.429;
    %tmp.432 = "label";
    symbol [ Rez %tmp.434 154 15 18 ];
    %tmp.434 = getv ? :Rez;
    symbol [ Strings %tmp.435 154 19 26 ];
    %tmp.435 = getv %tmp.434 :Strings;
    symbol [ BodyBattery %tmp.436 154 27 38 ];
    %tmp.436 = getv %tmp.435 :BodyBattery;
    %tmp.437 = dup %tmp.431;
    %tmp.438 = aputv %tmp.437 %tmp.432 %tmp.436;
    %tmp.439 = "labelExt";
    symbol [ Rez %tmp.441 155 18 21 ];
    %tmp.441 = getv ? :Rez;
    symbol [ Strings %tmp.442 155 22 29 ];
    %tmp.442 = getv %tmp.441 :Strings;
    symbol [ BodyBatteryExt %tmp.443 155 30 44 ];
    %tmp.443 = getv %tmp.442 :BodyBatteryExt;
    %tmp.444 = dup %tmp.438;
    %tmp.445 = aputv %tmp.444 %tmp.439 %tmp.443;
    %tmp.446 = "getter";
    %tmp.448 = const :getBodyBattery;
    symbol [ getBodyBattery %tmp.448 156 17 31 const ];
    %tmp.449 = dup %tmp.445;
    %tmp.450 = aputv %tmp.449 %tmp.446 %tmp.448;
    %tmp.451 = "complicationId";
    symbol [ Complications %tmp.452 157 24 37 ];
    %tmp.452 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_BODY_BATTERY %tmp.453 157 38 68 ];
    %tmp.453 = getv %tmp.452 :COMPLICATION_TYPE_BODY_BATTERY;
    %tmp.454 = dup %tmp.450;
    %tmp.455 = aputv %tmp.454 %tmp.451 %tmp.453;
    %tmp.456 = dup %tmp.426;
    %tmp.457 = aputv %tmp.456 10 %tmp.455;
    %tmp.458 = newd 5;
    %tmp.459 = "id";
    %tmp.460 = "Steps";
    %tmp.461 = dup %tmp.458;
    %tmp.462 = aputv %tmp.461 %tmp.459 %tmp.460;
    %tmp.463 = "label";
    symbol [ Rez %tmp.465 161 15 18 ];
    %tmp.465 = getv ? :Rez;
    symbol [ Strings %tmp.466 161 19 26 ];
    %tmp.466 = getv %tmp.465 :Strings;
    symbol [ Steps %tmp.467 161 27 32 ];
    %tmp.467 = getv %tmp.466 :Steps;
    %tmp.468 = dup %tmp.462;
    %tmp.469 = aputv %tmp.468 %tmp.463 %tmp.467;
    %tmp.470 = "labelExt";
    symbol [ Rez %tmp.472 162 18 21 ];
    %tmp.472 = getv ? :Rez;
    symbol [ Strings %tmp.473 162 22 29 ];
    %tmp.473 = getv %tmp.472 :Strings;
    symbol [ StepsExt %tmp.474 162 30 38 ];
    %tmp.474 = getv %tmp.473 :StepsExt;
    %tmp.475 = dup %tmp.469;
    %tmp.476 = aputv %tmp.475 %tmp.470 %tmp.474;
    %tmp.477 = "getter";
    %tmp.479 = const :getSteps;
    symbol [ getSteps %tmp.479 163 17 25 const ];
    %tmp.480 = dup %tmp.476;
    %tmp.481 = aputv %tmp.480 %tmp.477 %tmp.479;
    %tmp.482 = "complicationId";
    symbol [ Complications %tmp.483 164 24 37 ];
    %tmp.483 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_STEPS %tmp.484 164 38 61 ];
    %tmp.484 = getv %tmp.483 :COMPLICATION_TYPE_STEPS;
    %tmp.485 = dup %tmp.481;
    %tmp.486 = aputv %tmp.485 %tmp.482 %tmp.484;
    %tmp.487 = dup %tmp.457;
    %tmp.488 = aputv %tmp.487 11 %tmp.486;
    %tmp.489 = newd 5;
    %tmp.490 = "id";
    %tmp.491 = "Floors";
    %tmp.492 = dup %tmp.489;
    %tmp.493 = aputv %tmp.492 %tmp.490 %tmp.491;
    %tmp.494 = "label";
    symbol [ Rez %tmp.496 168 15 18 ];
    %tmp.496 = getv ? :Rez;
    symbol [ Strings %tmp.497 168 19 26 ];
    %tmp.497 = getv %tmp.496 :Strings;
    symbol [ Floors %tmp.498 168 27 33 ];
    %tmp.498 = getv %tmp.497 :Floors;
    %tmp.499 = dup %tmp.493;
    %tmp.500 = aputv %tmp.499 %tmp.494 %tmp.498;
    %tmp.501 = "labelExt";
    symbol [ Rez %tmp.503 169 18 21 ];
    %tmp.503 = getv ? :Rez;
    symbol [ Strings %tmp.504 169 22 29 ];
    %tmp.504 = getv %tmp.503 :Strings;
    symbol [ FloorsExt %tmp.505 169 30 39 ];
    %tmp.505 = getv %tmp.504 :FloorsExt;
    %tmp.506 = dup %tmp.500;
    %tmp.507 = aputv %tmp.506 %tmp.501 %tmp.505;
    %tmp.508 = "getter";
    %tmp.510 = const :getFloors;
    symbol [ getFloors %tmp.510 170 17 26 const ];
    %tmp.511 = dup %tmp.507;
    %tmp.512 = aputv %tmp.511 %tmp.508 %tmp.510;
    %tmp.513 = "complicationId";
    symbol [ Complications %tmp.514 171 24 37 ];
    %tmp.514 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_FLOORS_CLIMBED %tmp.515 171 38 70 ];
    %tmp.515 = getv %tmp.514 :COMPLICATION_TYPE_FLOORS_CLIMBED;
    %tmp.516 = dup %tmp.512;
    %tmp.517 = aputv %tmp.516 %tmp.513 %tmp.515;
    %tmp.518 = dup %tmp.488;
    %tmp.519 = aputv %tmp.518 12 %tmp.517;
    %tmp.520 = newd 5;
    %tmp.521 = "id";
    %tmp.522 = "BatteryDays";
    %tmp.523 = dup %tmp.520;
    %tmp.524 = aputv %tmp.523 %tmp.521 %tmp.522;
    %tmp.525 = "label";
    symbol [ Rez %tmp.527 175 15 18 ];
    %tmp.527 = getv ? :Rez;
    symbol [ Strings %tmp.528 175 19 26 ];
    %tmp.528 = getv %tmp.527 :Strings;
    symbol [ BatteryDays %tmp.529 175 27 38 ];
    %tmp.529 = getv %tmp.528 :BatteryDays;
    %tmp.530 = dup %tmp.524;
    %tmp.531 = aputv %tmp.530 %tmp.525 %tmp.529;
    %tmp.532 = "labelExt";
    symbol [ Rez %tmp.534 176 18 21 ];
    %tmp.534 = getv ? :Rez;
    symbol [ Strings %tmp.535 176 22 29 ];
    %tmp.535 = getv %tmp.534 :Strings;
    symbol [ BatteryDaysExt %tmp.536 176 30 44 ];
    %tmp.536 = getv %tmp.535 :BatteryDaysExt;
    %tmp.537 = dup %tmp.531;
    %tmp.538 = aputv %tmp.537 %tmp.532 %tmp.536;
    %tmp.539 = "getter";
    %tmp.541 = const :getBatteryDays;
    symbol [ getBatteryDays %tmp.541 177 17 31 const ];
    %tmp.542 = dup %tmp.538;
    %tmp.543 = aputv %tmp.542 %tmp.539 %tmp.541;
    %tmp.544 = "complicationId";
    symbol [ Complications %tmp.545 178 24 37 ];
    %tmp.545 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_BATTERY %tmp.546 178 38 63 ];
    %tmp.546 = getv %tmp.545 :COMPLICATION_TYPE_BATTERY;
    %tmp.547 = dup %tmp.543;
    %tmp.548 = aputv %tmp.547 %tmp.544 %tmp.546;
    %tmp.549 = dup %tmp.519;
    %tmp.550 = aputv %tmp.549 13 %tmp.548;
    %tmp.551 = newd 5;
    %tmp.552 = "id";
    %tmp.553 = "SolarIntensity";
    %tmp.554 = dup %tmp.551;
    %tmp.555 = aputv %tmp.554 %tmp.552 %tmp.553;
    %tmp.556 = "label";
    symbol [ Rez %tmp.558 182 15 18 ];
    %tmp.558 = getv ? :Rez;
    symbol [ Strings %tmp.559 182 19 26 ];
    %tmp.559 = getv %tmp.558 :Strings;
    symbol [ SolarIntensity %tmp.560 182 27 41 ];
    %tmp.560 = getv %tmp.559 :SolarIntensity;
    %tmp.561 = dup %tmp.555;
    %tmp.562 = aputv %tmp.561 %tmp.556 %tmp.560;
    %tmp.563 = "labelExt";
    symbol [ Rez %tmp.565 183 18 21 ];
    %tmp.565 = getv ? :Rez;
    symbol [ Strings %tmp.566 183 22 29 ];
    %tmp.566 = getv %tmp.565 :Strings;
    symbol [ SolarIntensityExt %tmp.567 183 30 47 ];
    %tmp.567 = getv %tmp.566 :SolarIntensityExt;
    %tmp.568 = dup %tmp.562;
    %tmp.569 = aputv %tmp.568 %tmp.563 %tmp.567;
    %tmp.570 = "getter";
    %tmp.572 = const :getSolarIntensity;
    symbol [ getSolarIntensity %tmp.572 184 17 34 const ];
    %tmp.573 = dup %tmp.569;
    %tmp.574 = aputv %tmp.573 %tmp.570 %tmp.572;
    %tmp.575 = "complicationId";
    symbol [ Complications %tmp.576 185 24 37 ];
    %tmp.576 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_SOLAR_INPUT %tmp.577 185 38 67 ];
    %tmp.577 = getv %tmp.576 :COMPLICATION_TYPE_SOLAR_INPUT;
    %tmp.578 = dup %tmp.574;
    %tmp.579 = aputv %tmp.578 %tmp.575 %tmp.577;
    %tmp.580 = dup %tmp.550;
    %tmp.581 = aputv %tmp.580 14 %tmp.579;
    %tmp.582 = newd 5;
    %tmp.583 = "id";
    %tmp.584 = "Calories";
    %tmp.585 = dup %tmp.582;
    %tmp.586 = aputv %tmp.585 %tmp.583 %tmp.584;
    %tmp.587 = "label";
    symbol [ Rez %tmp.589 189 15 18 ];
    %tmp.589 = getv ? :Rez;
    symbol [ Strings %tmp.590 189 19 26 ];
    %tmp.590 = getv %tmp.589 :Strings;
    symbol [ Calories %tmp.591 189 27 35 ];
    %tmp.591 = getv %tmp.590 :Calories;
    %tmp.592 = dup %tmp.586;
    %tmp.593 = aputv %tmp.592 %tmp.587 %tmp.591;
    %tmp.594 = "labelExt";
    symbol [ Rez %tmp.596 190 18 21 ];
    %tmp.596 = getv ? :Rez;
    symbol [ Strings %tmp.597 190 22 29 ];
    %tmp.597 = getv %tmp.596 :Strings;
    symbol [ CaloriesExt %tmp.598 190 30 41 ];
    %tmp.598 = getv %tmp.597 :CaloriesExt;
    %tmp.599 = dup %tmp.593;
    %tmp.600 = aputv %tmp.599 %tmp.594 %tmp.598;
    %tmp.601 = "getter";
    %tmp.603 = const :getCalories;
    symbol [ getCalories %tmp.603 191 17 28 const ];
    %tmp.604 = dup %tmp.600;
    %tmp.605 = aputv %tmp.604 %tmp.601 %tmp.603;
    %tmp.606 = "complicationId";
    symbol [ Complications %tmp.607 192 24 37 ];
    %tmp.607 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_CALORIES %tmp.608 192 38 64 ];
    %tmp.608 = getv %tmp.607 :COMPLICATION_TYPE_CALORIES;
    %tmp.609 = dup %tmp.605;
    %tmp.610 = aputv %tmp.609 %tmp.606 %tmp.608;
    %tmp.611 = dup %tmp.581;
    %tmp.612 = aputv %tmp.611 15 %tmp.610;
    %tmp.613 = newd 5;
    %tmp.614 = "id";
    %tmp.615 = "Temperature";
    %tmp.616 = dup %tmp.613;
    %tmp.617 = aputv %tmp.616 %tmp.614 %tmp.615;
    %tmp.618 = "label";
    symbol [ Rez %tmp.620 196 15 18 ];
    %tmp.620 = getv ? :Rez;
    symbol [ Strings %tmp.621 196 19 26 ];
    %tmp.621 = getv %tmp.620 :Strings;
    symbol [ Temperature %tmp.622 196 27 38 ];
    %tmp.622 = getv %tmp.621 :Temperature;
    %tmp.623 = dup %tmp.617;
    %tmp.624 = aputv %tmp.623 %tmp.618 %tmp.622;
    %tmp.625 = "labelExt";
    symbol [ Rez %tmp.627 197 18 21 ];
    %tmp.627 = getv ? :Rez;
    symbol [ Strings %tmp.628 197 22 29 ];
    %tmp.628 = getv %tmp.627 :Strings;
    symbol [ TemperatureExt %tmp.629 197 30 44 ];
    %tmp.629 = getv %tmp.628 :TemperatureExt;
    %tmp.630 = dup %tmp.624;
    %tmp.631 = aputv %tmp.630 %tmp.625 %tmp.629;
    %tmp.632 = "getter";
    %tmp.634 = const :getTemperature;
    symbol [ getTemperature %tmp.634 198 17 31 const ];
    %tmp.635 = dup %tmp.631;
    %tmp.636 = aputv %tmp.635 %tmp.632 %tmp.634;
    %tmp.637 = "complicationId";
    symbol [ Complications %tmp.638 199 24 37 ];
    %tmp.638 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_CURRENT_TEMPERATURE %tmp.639 199 38 75 ];
    %tmp.639 = getv %tmp.638 :COMPLICATION_TYPE_CURRENT_TEMPERATURE;
    %tmp.640 = dup %tmp.636;
    %tmp.641 = aputv %tmp.640 %tmp.637 %tmp.639;
    %tmp.642 = dup %tmp.612;
    %tmp.643 = aputv %tmp.642 16 %tmp.641;
    putv self :fieldCatalog %tmp.643;
[ "/Users/mattia/development/project/monkey_c/Essence/source/Globals.mc" 203 4 ]
    %tmp.644 = newa 4;
    %tmp.645 = newd 9;
    %tmp.646 = "id";
    %tmp.647 = "fieldCatalog";
    %tmp.648 = dup %tmp.645;
    %tmp.649 = aputv %tmp.648 %tmp.646 %tmp.647;
    %tmp.650 = "label";
    %tmp.651 = null;
    %tmp.652 = dup %tmp.649;
    %tmp.653 = aputv %tmp.652 %tmp.650 %tmp.651;
    %tmp.654 = "labelExt";
    symbol [ Rez %tmp.656 207 18 21 ];
    %tmp.656 = getv ? :Rez;
    symbol [ Strings %tmp.657 207 22 29 ];
    %tmp.657 = getv %tmp.656 :Strings;
    symbol [ ShowGraphfieldCatalog %tmp.658 207 30 51 ];
    %tmp.658 = getv %tmp.657 :ShowGraphfieldCatalog;
    %tmp.659 = dup %tmp.653;
    %tmp.660 = aputv %tmp.659 %tmp.654 %tmp.658;
    %tmp.661 = "getter";
    %tmp.663 = const :getEmpty;
    symbol [ getEmpty %tmp.663 208 17 25 const ];
    %tmp.664 = dup %tmp.660;
    %tmp.665 = aputv %tmp.664 %tmp.661 %tmp.663;
    %tmp.666 = "iterator";
    %tmp.667 = null;
    %tmp.668 = dup %tmp.665;
    %tmp.669 = aputv %tmp.668 %tmp.666 %tmp.667;
    %tmp.670 = "complicationId";
    %tmp.671 = null;
    %tmp.672 = dup %tmp.669;
    %tmp.673 = aputv %tmp.672 %tmp.670 %tmp.671;
    %tmp.674 = "color";
    %tmp.675 = null;
    %tmp.676 = dup %tmp.673;
    %tmp.677 = aputv %tmp.676 %tmp.674 %tmp.675;
    %tmp.678 = "colorDark";
    %tmp.679 = null;
    %tmp.680 = dup %tmp.677;
    %tmp.681 = aputv %tmp.680 %tmp.678 %tmp.679;
    %tmp.682 = "scale";
    %tmp.683 = 0.9;
    %tmp.684 = dup %tmp.681;
    %tmp.685 = aputv %tmp.684 %tmp.682 %tmp.683;
    %tmp.686 = dup %tmp.644;
    %tmp.687 = aputv %tmp.686 0 %tmp.685;
    %tmp.688 = newd 9;
    %tmp.689 = "id";
    %tmp.690 = "HeartRate";
    %tmp.691 = dup %tmp.688;
    %tmp.692 = aputv %tmp.691 %tmp.689 %tmp.690;
    %tmp.693 = "label";
    symbol [ Rez %tmp.695 217 15 18 ];
    %tmp.695 = getv ? :Rez;
    symbol [ Strings %tmp.696 217 19 26 ];
    %tmp.696 = getv %tmp.695 :Strings;
    symbol [ HeartRate %tmp.697 217 27 36 ];
    %tmp.697 = getv %tmp.696 :HeartRate;
    %tmp.698 = dup %tmp.692;
    %tmp.699 = aputv %tmp.698 %tmp.693 %tmp.697;
    %tmp.700 = "labelExt";
    symbol [ Rez %tmp.702 218 18 21 ];
    %tmp.702 = getv ? :Rez;
    symbol [ Strings %tmp.703 218 22 29 ];
    %tmp.703 = getv %tmp.702 :Strings;
    symbol [ ShowGraphHeartRate %tmp.704 218 30 48 ];
    %tmp.704 = getv %tmp.703 :ShowGraphHeartRate;
    %tmp.705 = dup %tmp.699;
    %tmp.706 = aputv %tmp.705 %tmp.700 %tmp.704;
    %tmp.707 = "getter";
    %tmp.709 = const :getHeartRate;
    symbol [ getHeartRate %tmp.709 219 17 29 const ];
    %tmp.710 = dup %tmp.706;
    %tmp.711 = aputv %tmp.710 %tmp.707 %tmp.709;
    %tmp.712 = "iterator";
    %tmp.714 = const :getHeartRateHistory;
    symbol [ getHeartRateHistory %tmp.714 220 19 38 const ];
    %tmp.715 = dup %tmp.711;
    %tmp.716 = aputv %tmp.715 %tmp.712 %tmp.714;
    %tmp.717 = "complicationId";
    symbol [ Complications %tmp.718 221 24 37 ];
    %tmp.718 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_HEART_RATE %tmp.719 221 38 66 ];
    %tmp.719 = getv %tmp.718 :COMPLICATION_TYPE_HEART_RATE;
    %tmp.720 = dup %tmp.716;
    %tmp.721 = aputv %tmp.720 %tmp.717 %tmp.719;
    %tmp.722 = "color";
    symbol [ Graphics %tmp.723 222 15 23 ];
    %tmp.723 = getm $.Toybox.Graphics;
    symbol [ COLOR_RED %tmp.724 222 24 33 ];
    %tmp.724 = getv %tmp.723 :COLOR_RED;
    %tmp.725 = dup %tmp.721;
    %tmp.726 = aputv %tmp.725 %tmp.722 %tmp.724;
    %tmp.727 = "colorDark";
    symbol [ Graphics %tmp.728 223 19 27 ];
    %tmp.728 = getm $.Toybox.Graphics;
    symbol [ COLOR_DK_RED %tmp.729 223 28 40 ];
    %tmp.729 = getv %tmp.728 :COLOR_DK_RED;
    %tmp.730 = dup %tmp.726;
    %tmp.731 = aputv %tmp.730 %tmp.727 %tmp.729;
    %tmp.732 = "scale";
    %tmp.733 = 0.9;
    %tmp.734 = dup %tmp.731;
    %tmp.735 = aputv %tmp.734 %tmp.732 %tmp.733;
    %tmp.736 = dup %tmp.687;
    %tmp.737 = aputv %tmp.736 1 %tmp.735;
    %tmp.738 = newd 9;
    %tmp.739 = "id";
    %tmp.740 = "Barometer";
    %tmp.741 = dup %tmp.738;
    %tmp.742 = aputv %tmp.741 %tmp.739 %tmp.740;
    %tmp.743 = "label";
    symbol [ Rez %tmp.745 228 15 18 ];
    %tmp.745 = getv ? :Rez;
    symbol [ Strings %tmp.746 228 19 26 ];
    %tmp.746 = getv %tmp.745 :Strings;
    symbol [ Barometer %tmp.747 228 27 36 ];
    %tmp.747 = getv %tmp.746 :Barometer;
    %tmp.748 = dup %tmp.742;
    %tmp.749 = aputv %tmp.748 %tmp.743 %tmp.747;
    %tmp.750 = "labelExt";
    symbol [ Rez %tmp.752 229 18 21 ];
    %tmp.752 = getv ? :Rez;
    symbol [ Strings %tmp.753 229 22 29 ];
    %tmp.753 = getv %tmp.752 :Strings;
    symbol [ ShowGraphPressure %tmp.754 229 30 47 ];
    %tmp.754 = getv %tmp.753 :ShowGraphPressure;
    %tmp.755 = dup %tmp.749;
    %tmp.756 = aputv %tmp.755 %tmp.750 %tmp.754;
    %tmp.757 = "getter";
    %tmp.759 = const :getBarometer;
    symbol [ getBarometer %tmp.759 230 17 29 const ];
    %tmp.760 = dup %tmp.756;
    %tmp.761 = aputv %tmp.760 %tmp.757 %tmp.759;
    %tmp.762 = "iterator";
    %tmp.764 = const :getPressureHistory;
    symbol [ getPressureHistory %tmp.764 231 19 37 const ];
    %tmp.765 = dup %tmp.761;
    %tmp.766 = aputv %tmp.765 %tmp.762 %tmp.764;
    %tmp.767 = "complicationId";
    symbol [ Complications %tmp.768 232 24 37 ];
    %tmp.768 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_SEA_LEVEL_PRESSURE %tmp.769 232 38 74 ];
    %tmp.769 = getv %tmp.768 :COMPLICATION_TYPE_SEA_LEVEL_PRESSURE;
    %tmp.770 = dup %tmp.766;
    %tmp.771 = aputv %tmp.770 %tmp.767 %tmp.769;
    %tmp.772 = "color";
    symbol [ Graphics %tmp.773 233 15 23 ];
    %tmp.773 = getm $.Toybox.Graphics;
    symbol [ COLOR_BLUE %tmp.774 233 24 34 ];
    %tmp.774 = getv %tmp.773 :COLOR_BLUE;
    %tmp.775 = dup %tmp.771;
    %tmp.776 = aputv %tmp.775 %tmp.772 %tmp.774;
    %tmp.777 = "colorDark";
    symbol [ Graphics %tmp.778 234 19 27 ];
    %tmp.778 = getm $.Toybox.Graphics;
    symbol [ COLOR_DK_BLUE %tmp.779 234 28 41 ];
    %tmp.779 = getv %tmp.778 :COLOR_DK_BLUE;
    %tmp.780 = dup %tmp.776;
    %tmp.781 = aputv %tmp.780 %tmp.777 %tmp.779;
    %tmp.782 = "scale";
    %tmp.783 = 0.99;
    %tmp.784 = dup %tmp.781;
    %tmp.785 = aputv %tmp.784 %tmp.782 %tmp.783;
    %tmp.786 = dup %tmp.737;
    %tmp.787 = aputv %tmp.786 2 %tmp.785;
    %tmp.788 = newd 9;
    %tmp.789 = "id";
    %tmp.790 = "Altimeter";
    %tmp.791 = dup %tmp.788;
    %tmp.792 = aputv %tmp.791 %tmp.789 %tmp.790;
    %tmp.793 = "label";
    symbol [ Rez %tmp.795 239 15 18 ];
    %tmp.795 = getv ? :Rez;
    symbol [ Strings %tmp.796 239 19 26 ];
    %tmp.796 = getv %tmp.795 :Strings;
    symbol [ Altimeter %tmp.797 239 27 36 ];
    %tmp.797 = getv %tmp.796 :Altimeter;
    %tmp.798 = dup %tmp.792;
    %tmp.799 = aputv %tmp.798 %tmp.793 %tmp.797;
    %tmp.800 = "labelExt";
    symbol [ Rez %tmp.802 240 18 21 ];
    %tmp.802 = getv ? :Rez;
    symbol [ Strings %tmp.803 240 22 29 ];
    %tmp.803 = getv %tmp.802 :Strings;
    symbol [ ShowGraphAltimeter %tmp.804 240 30 48 ];
    %tmp.804 = getv %tmp.803 :ShowGraphAltimeter;
    %tmp.805 = dup %tmp.799;
    %tmp.806 = aputv %tmp.805 %tmp.800 %tmp.804;
    %tmp.807 = "getter";
    %tmp.809 = const :getAltimeter;
    symbol [ getAltimeter %tmp.809 241 17 29 const ];
    %tmp.810 = dup %tmp.806;
    %tmp.811 = aputv %tmp.810 %tmp.807 %tmp.809;
    %tmp.812 = "iterator";
    %tmp.814 = const :getElevationHistory;
    symbol [ getElevationHistory %tmp.814 242 19 38 const ];
    %tmp.815 = dup %tmp.811;
    %tmp.816 = aputv %tmp.815 %tmp.812 %tmp.814;
    %tmp.817 = "complicationId";
    symbol [ Complications %tmp.818 243 24 37 ];
    %tmp.818 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_ALTITUDE %tmp.819 243 38 64 ];
    %tmp.819 = getv %tmp.818 :COMPLICATION_TYPE_ALTITUDE;
    %tmp.820 = dup %tmp.816;
    %tmp.821 = aputv %tmp.820 %tmp.817 %tmp.819;
    %tmp.822 = "colorDark";
    symbol [ Graphics %tmp.823 244 19 27 ];
    %tmp.823 = getm $.Toybox.Graphics;
    symbol [ COLOR_GREEN %tmp.824 244 28 39 ];
    %tmp.824 = getv %tmp.823 :COLOR_GREEN;
    %tmp.825 = dup %tmp.821;
    %tmp.826 = aputv %tmp.825 %tmp.822 %tmp.824;
    %tmp.827 = "color";
    symbol [ Graphics %tmp.828 245 15 23 ];
    %tmp.828 = getm $.Toybox.Graphics;
    symbol [ COLOR_DK_GREEN %tmp.829 245 24 38 ];
    %tmp.829 = getv %tmp.828 :COLOR_DK_GREEN;
    %tmp.830 = dup %tmp.826;
    %tmp.831 = aputv %tmp.830 %tmp.827 %tmp.829;
    %tmp.832 = "scale";
    %tmp.833 = 0.9;
    %tmp.834 = dup %tmp.831;
    %tmp.835 = aputv %tmp.834 %tmp.832 %tmp.833;
    %tmp.836 = dup %tmp.787;
    %tmp.837 = aputv %tmp.836 3 %tmp.835;
    putv self :graphCatalog %tmp.837;
}
