import Toybox.Lang;
using Toybox.WatchUi;
using Toybox.WatchUi as Ui;
using Toybox.Graphics;
using Toybox.Graphics as Gfx;

module Rez {
    module Drawables {
        (:initialized) var LauncherIcon as ResourceId;

        class bGrondFillerWhite extends WatchUi.Drawable {

            function initialize() {
                Drawable.initialize({});
            }

            function draw(dc as Graphics.Dc) as Void {
                if (self has :isVisible) {
                    if (!self.isVisible) {
                        return;
                    }
                }


                dc.setColor(Gfx.COLOR_WHITE, Graphics.COLOR_TRANSPARENT);
                dc.fillRectangle(((0 + 0) + 0) + 0, ((0 + 0) + 0) + 0, ((dc.getWidth() - 0) - 0) - (2 * 0), ((dc.getHeight() - 0) - 0) - (2 * 0));
            }
        }
    } // Drawables

    module Fonts {
        (:initialized) var LabelFont as ResourceId;
        (:initialized) var DataFont as ResourceId;
        (:initialized) var TimeFont as ResourceId;
        (:initialized) var IconFont as ResourceId;
        (:initialized) var LabelFont454 as ResourceId;
        (:initialized) var DataFont454 as ResourceId;
        (:initialized) var TimeFont454 as ResourceId;
        (:initialized) var IconFont454 as ResourceId;
    } // Fonts

    module Layouts {
        function WatchFace(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
            var local_Rez_Fonts_LabelFont454 = (WatchUi.loadResource($.Rez.Fonts.LabelFont454) as Graphics.FontReference);
            var local_Rez_Fonts_DataFont454 = (WatchUi.loadResource($.Rez.Fonts.DataFont454) as Graphics.FontReference);
            var local_Rez_Fonts_TimeFont454 = (WatchUi.loadResource($.Rez.Fonts.TimeFont454) as Graphics.FontReference);
            var local_Rez_Fonts_IconFont454 = (WatchUi.loadResource($.Rez.Fonts.IconFont454) as Graphics.FontReference);
            var rez_cmp_local_var_dc_getHeight = dc.getHeight();

            var rez_cmp_local_var_dc_getWidth = dc.getWidth();

            var rez_cmp_local_text_FieldTopLabel = new WatchUi.Text({:identifier=>"FieldTopLabel", :color=>Graphics.COLOR_DK_GRAY, :locX=>(rez_cmp_local_var_dc_getWidth * 0.5), :locY=>(rez_cmp_local_var_dc_getHeight * (0 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>local_Rez_Fonts_LabelFont454});

            var rez_cmp_local_text_FieldTopData = new WatchUi.Text({:identifier=>"FieldTopData", :locX=>(rez_cmp_local_var_dc_getWidth * 0.5), :locY=>(rez_cmp_local_var_dc_getHeight * (5 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>local_Rez_Fonts_DataFont454});

            var rez_cmp_local_text_FieldUpperLeftLabel = new WatchUi.Text({:identifier=>"FieldUpperLeftLabel", :color=>Graphics.COLOR_DK_GRAY, :locX=>(rez_cmp_local_var_dc_getWidth * (35 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (13 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>local_Rez_Fonts_LabelFont454});

            var rez_cmp_local_text_FieldUpperLeftData = new WatchUi.Text({:identifier=>"FieldUpperLeftData", :locX=>(rez_cmp_local_var_dc_getWidth * (35 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (18 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>local_Rez_Fonts_DataFont454});

            var rez_cmp_local_text_FieldUpperCenterLabel = new WatchUi.Text({:identifier=>"FieldUpperCenterLabel", :color=>Graphics.COLOR_DK_GRAY, :locX=>(rez_cmp_local_var_dc_getWidth * 0.5), :locY=>(rez_cmp_local_var_dc_getHeight * (13 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>local_Rez_Fonts_LabelFont454});

            var rez_cmp_local_text_FieldUpperCenterData = new WatchUi.Text({:identifier=>"FieldUpperCenterData", :locX=>(rez_cmp_local_var_dc_getWidth * 0.5), :locY=>(rez_cmp_local_var_dc_getHeight * (18 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>local_Rez_Fonts_DataFont454});

            var rez_cmp_local_text_FieldUpperRightLabel = new WatchUi.Text({:identifier=>"FieldUpperRightLabel", :color=>Graphics.COLOR_DK_GRAY, :locX=>(rez_cmp_local_var_dc_getWidth * (65 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (13 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_LEFT, :font=>local_Rez_Fonts_LabelFont454});

            var rez_cmp_local_text_FieldUpperRightData = new WatchUi.Text({:identifier=>"FieldUpperRightData", :locX=>(rez_cmp_local_var_dc_getWidth * (65 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (18 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_LEFT, :font=>local_Rez_Fonts_DataFont454});

            var rez_cmp_local_text_FieldDate = new WatchUi.Text({:identifier=>"FieldDate", :color=>Graphics.COLOR_BLUE, :locX=>(rez_cmp_local_var_dc_getWidth * (93 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (26 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>local_Rez_Fonts_DataFont454});

            var rez_cmp_local_text_FieldTime = new WatchUi.Text({:identifier=>"FieldTime", :locX=>(rez_cmp_local_var_dc_getWidth * (52.5 / 100.0)), :locY=>((rez_cmp_local_var_dc_getHeight - 208) * 0.5), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>local_Rez_Fonts_TimeFont454});

            var rez_cmp_local_text_FieldIcons = new WatchUi.Text({:identifier=>"FieldIcons", :color=>Graphics.COLOR_BLUE, :locX=>(rez_cmp_local_var_dc_getWidth * (93 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (65 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>local_Rez_Fonts_IconFont454});

            var rez_cmp_local_text_FieldLowerLeftLabel = new WatchUi.Text({:identifier=>"FieldLowerLeftLabel", :color=>Graphics.COLOR_DK_GRAY, :locX=>(rez_cmp_local_var_dc_getWidth * (35 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (71 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>local_Rez_Fonts_LabelFont454});

            var rez_cmp_local_text_FieldLowerLeftData = new WatchUi.Text({:identifier=>"FieldLowerLeftData", :locX=>(rez_cmp_local_var_dc_getWidth * (35 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (76 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>local_Rez_Fonts_DataFont454});

            var rez_cmp_local_text_FieldGraphLabel = new WatchUi.Text({:identifier=>"FieldGraphLabel", :color=>Graphics.COLOR_DK_GRAY, :locX=>(rez_cmp_local_var_dc_getWidth * (48 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (67 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>local_Rez_Fonts_LabelFont454});

            var rez_cmp_local_text_FieldGraphData = new WatchUi.Text({:identifier=>"FieldGraphData", :locX=>(rez_cmp_local_var_dc_getWidth * (51 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (67 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_LEFT, :font=>local_Rez_Fonts_LabelFont454});

            var rez_cmp_local_text_FieldLowerCenterLabel = new WatchUi.Text({:identifier=>"FieldLowerCenterLabel", :color=>Graphics.COLOR_DK_GRAY, :locX=>(rez_cmp_local_var_dc_getWidth * 0.5), :locY=>(rez_cmp_local_var_dc_getHeight * (71 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>local_Rez_Fonts_LabelFont454});

            var rez_cmp_local_text_FieldLowerCenterData = new WatchUi.Text({:identifier=>"FieldLowerCenterData", :locX=>(rez_cmp_local_var_dc_getWidth * 0.5), :locY=>(rez_cmp_local_var_dc_getHeight * (76 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>local_Rez_Fonts_DataFont454});

            var rez_cmp_local_text_FieldLowerRightLabel = new WatchUi.Text({:identifier=>"FieldLowerRightLabel", :color=>Graphics.COLOR_DK_GRAY, :locX=>(rez_cmp_local_var_dc_getWidth * (65 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (71 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_LEFT, :font=>local_Rez_Fonts_LabelFont454});

            var rez_cmp_local_text_FieldLowerRightData = new WatchUi.Text({:identifier=>"FieldLowerRightData", :locX=>(rez_cmp_local_var_dc_getWidth * (65 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (76 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_LEFT, :font=>local_Rez_Fonts_DataFont454});

            var rez_cmp_local_text_FieldBottomLabel = new WatchUi.Text({:identifier=>"FieldBottomLabel", :color=>Graphics.COLOR_DK_GRAY, :locX=>(rez_cmp_local_var_dc_getWidth * 0.5), :locY=>(rez_cmp_local_var_dc_getHeight * (84 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>local_Rez_Fonts_LabelFont454});

            var rez_cmp_local_text_FieldBottomData = new WatchUi.Text({:identifier=>"FieldBottomData", :locX=>(rez_cmp_local_var_dc_getWidth * 0.5), :locY=>(rez_cmp_local_var_dc_getHeight * (89 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>local_Rez_Fonts_DataFont454});

            return [rez_cmp_local_text_FieldTopLabel, rez_cmp_local_text_FieldTopData, rez_cmp_local_text_FieldUpperLeftLabel, rez_cmp_local_text_FieldUpperLeftData, rez_cmp_local_text_FieldUpperCenterLabel, rez_cmp_local_text_FieldUpperCenterData, rez_cmp_local_text_FieldUpperRightLabel, rez_cmp_local_text_FieldUpperRightData, rez_cmp_local_text_FieldDate, rez_cmp_local_text_FieldTime, rez_cmp_local_text_FieldIcons, rez_cmp_local_text_FieldLowerLeftLabel, rez_cmp_local_text_FieldLowerLeftData, rez_cmp_local_text_FieldGraphLabel, rez_cmp_local_text_FieldGraphData, rez_cmp_local_text_FieldLowerCenterLabel, rez_cmp_local_text_FieldLowerCenterData, rez_cmp_local_text_FieldLowerRightLabel, rez_cmp_local_text_FieldLowerRightData, rez_cmp_local_text_FieldBottomLabel, rez_cmp_local_text_FieldBottomData] as Array<WatchUi.Drawable>;
        }

        function WatchFaceLight(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
            var local_Rez_Fonts_LabelFont454 = (WatchUi.loadResource($.Rez.Fonts.LabelFont454) as Graphics.FontReference);
            var local_Rez_Fonts_DataFont454 = (WatchUi.loadResource($.Rez.Fonts.DataFont454) as Graphics.FontReference);
            var local_Rez_Fonts_TimeFont454 = (WatchUi.loadResource($.Rez.Fonts.TimeFont454) as Graphics.FontReference);
            var local_Rez_Fonts_IconFont454 = (WatchUi.loadResource($.Rez.Fonts.IconFont454) as Graphics.FontReference);
            var rez_cmp_local_var_dc_getHeight = dc.getHeight();

            var rez_cmp_local_var_dc_getWidth = dc.getWidth();

            var rez_cmp_local_custom_drawable_bGrondFillerWhite = new $.Rez.Drawables.bGrondFillerWhite();
            if (rez_cmp_local_custom_drawable_bGrondFillerWhite.identifier == null) {
                rez_cmp_local_custom_drawable_bGrondFillerWhite.identifier = "bGrondFillerWhite";
            }

            var rez_cmp_local_text_FieldTopLabel = new WatchUi.Text({:identifier=>"FieldTopLabel", :color=>Graphics.COLOR_DK_GRAY, :locX=>(rez_cmp_local_var_dc_getWidth * 0.5), :locY=>(rez_cmp_local_var_dc_getHeight * (0 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>local_Rez_Fonts_LabelFont454});

            var rez_cmp_local_text_FieldTopData = new WatchUi.Text({:identifier=>"FieldTopData", :color=>Graphics.COLOR_BLACK, :locX=>(rez_cmp_local_var_dc_getWidth * 0.5), :locY=>(rez_cmp_local_var_dc_getHeight * (5 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>local_Rez_Fonts_DataFont454});

            var rez_cmp_local_text_FieldUpperLeftLabel = new WatchUi.Text({:identifier=>"FieldUpperLeftLabel", :color=>Graphics.COLOR_DK_GRAY, :locX=>(rez_cmp_local_var_dc_getWidth * (35 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (13 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>local_Rez_Fonts_LabelFont454});

            var rez_cmp_local_text_FieldUpperLeftData = new WatchUi.Text({:identifier=>"FieldUpperLeftData", :color=>Graphics.COLOR_BLACK, :locX=>(rez_cmp_local_var_dc_getWidth * (35 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (18 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>local_Rez_Fonts_DataFont454});

            var rez_cmp_local_text_FieldUpperCenterLabel = new WatchUi.Text({:identifier=>"FieldUpperCenterLabel", :color=>Graphics.COLOR_DK_GRAY, :locX=>(rez_cmp_local_var_dc_getWidth * 0.5), :locY=>(rez_cmp_local_var_dc_getHeight * (13 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>local_Rez_Fonts_LabelFont454});

            var rez_cmp_local_text_FieldUpperCenterData = new WatchUi.Text({:identifier=>"FieldUpperCenterData", :color=>Graphics.COLOR_BLACK, :locX=>(rez_cmp_local_var_dc_getWidth * 0.5), :locY=>(rez_cmp_local_var_dc_getHeight * (18 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>local_Rez_Fonts_DataFont454});

            var rez_cmp_local_text_FieldUpperRightLabel = new WatchUi.Text({:identifier=>"FieldUpperRightLabel", :color=>Graphics.COLOR_DK_GRAY, :locX=>(rez_cmp_local_var_dc_getWidth * (65 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (13 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_LEFT, :font=>local_Rez_Fonts_LabelFont454});

            var rez_cmp_local_text_FieldUpperRightData = new WatchUi.Text({:identifier=>"FieldUpperRightData", :color=>Graphics.COLOR_BLACK, :locX=>(rez_cmp_local_var_dc_getWidth * (65 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (18 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_LEFT, :font=>local_Rez_Fonts_DataFont454});

            var rez_cmp_local_text_FieldDate = new WatchUi.Text({:identifier=>"FieldDate", :color=>Graphics.COLOR_BLUE, :locX=>(rez_cmp_local_var_dc_getWidth * (93 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (26 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>local_Rez_Fonts_DataFont454});

            var rez_cmp_local_text_FieldTime = new WatchUi.Text({:identifier=>"FieldTime", :color=>Graphics.COLOR_BLACK, :locX=>(rez_cmp_local_var_dc_getWidth * (52.5 / 100.0)), :locY=>((rez_cmp_local_var_dc_getHeight - 208) * 0.5), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>local_Rez_Fonts_TimeFont454});

            var rez_cmp_local_text_FieldIcons = new WatchUi.Text({:identifier=>"FieldIcons", :color=>Graphics.COLOR_BLUE, :locX=>(rez_cmp_local_var_dc_getWidth * (93 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (65 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>local_Rez_Fonts_IconFont454});

            var rez_cmp_local_text_FieldLowerLeftLabel = new WatchUi.Text({:identifier=>"FieldLowerLeftLabel", :color=>Graphics.COLOR_DK_GRAY, :locX=>(rez_cmp_local_var_dc_getWidth * (35 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (71 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>local_Rez_Fonts_LabelFont454});

            var rez_cmp_local_text_FieldLowerLeftData = new WatchUi.Text({:identifier=>"FieldLowerLeftData", :color=>Graphics.COLOR_BLACK, :locX=>(rez_cmp_local_var_dc_getWidth * (35 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (76 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>local_Rez_Fonts_DataFont454});

            var rez_cmp_local_text_FieldGraphLabel = new WatchUi.Text({:identifier=>"FieldGraphLabel", :color=>Graphics.COLOR_DK_GRAY, :locX=>(rez_cmp_local_var_dc_getWidth * (48 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (67 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>local_Rez_Fonts_LabelFont454});

            var rez_cmp_local_text_FieldGraphData = new WatchUi.Text({:identifier=>"FieldGraphData", :color=>Graphics.COLOR_BLACK, :locX=>(rez_cmp_local_var_dc_getWidth * (51 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (67 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_LEFT, :font=>local_Rez_Fonts_LabelFont454});

            var rez_cmp_local_text_FieldLowerCenterLabel = new WatchUi.Text({:identifier=>"FieldLowerCenterLabel", :color=>Graphics.COLOR_DK_GRAY, :locX=>(rez_cmp_local_var_dc_getWidth * 0.5), :locY=>(rez_cmp_local_var_dc_getHeight * (71 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>local_Rez_Fonts_LabelFont454});

            var rez_cmp_local_text_FieldLowerCenterData = new WatchUi.Text({:identifier=>"FieldLowerCenterData", :color=>Graphics.COLOR_BLACK, :locX=>(rez_cmp_local_var_dc_getWidth * 0.5), :locY=>(rez_cmp_local_var_dc_getHeight * (76 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>local_Rez_Fonts_DataFont454});

            var rez_cmp_local_text_FieldLowerRightLabel = new WatchUi.Text({:identifier=>"FieldLowerRightLabel", :color=>Graphics.COLOR_DK_GRAY, :locX=>(rez_cmp_local_var_dc_getWidth * (65 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (71 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_LEFT, :font=>local_Rez_Fonts_LabelFont454});

            var rez_cmp_local_text_FieldLowerRightData = new WatchUi.Text({:identifier=>"FieldLowerRightData", :color=>Graphics.COLOR_BLACK, :locX=>(rez_cmp_local_var_dc_getWidth * (65 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (76 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_LEFT, :font=>local_Rez_Fonts_DataFont454});

            var rez_cmp_local_text_FieldBottomLabel = new WatchUi.Text({:identifier=>"FieldBottomLabel", :color=>Graphics.COLOR_DK_GRAY, :locX=>(rez_cmp_local_var_dc_getWidth * 0.5), :locY=>(rez_cmp_local_var_dc_getHeight * (84 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>local_Rez_Fonts_LabelFont454});

            var rez_cmp_local_text_FieldBottomData = new WatchUi.Text({:identifier=>"FieldBottomData", :color=>Graphics.COLOR_BLACK, :locX=>(rez_cmp_local_var_dc_getWidth * 0.5), :locY=>(rez_cmp_local_var_dc_getHeight * (89 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>local_Rez_Fonts_DataFont454});

            return [rez_cmp_local_custom_drawable_bGrondFillerWhite, rez_cmp_local_text_FieldTopLabel, rez_cmp_local_text_FieldTopData, rez_cmp_local_text_FieldUpperLeftLabel, rez_cmp_local_text_FieldUpperLeftData, rez_cmp_local_text_FieldUpperCenterLabel, rez_cmp_local_text_FieldUpperCenterData, rez_cmp_local_text_FieldUpperRightLabel, rez_cmp_local_text_FieldUpperRightData, rez_cmp_local_text_FieldDate, rez_cmp_local_text_FieldTime, rez_cmp_local_text_FieldIcons, rez_cmp_local_text_FieldLowerLeftLabel, rez_cmp_local_text_FieldLowerLeftData, rez_cmp_local_text_FieldGraphLabel, rez_cmp_local_text_FieldGraphData, rez_cmp_local_text_FieldLowerCenterLabel, rez_cmp_local_text_FieldLowerCenterData, rez_cmp_local_text_FieldLowerRightLabel, rez_cmp_local_text_FieldLowerRightData, rez_cmp_local_text_FieldBottomLabel, rez_cmp_local_text_FieldBottomData] as Array<WatchUi.Drawable>;
        }

        function BatterySave(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
            var local_Rez_Fonts_TimeFont454 = (WatchUi.loadResource($.Rez.Fonts.TimeFont454) as Graphics.FontReference);
            var local_Rez_Fonts_DataFont454 = (WatchUi.loadResource($.Rez.Fonts.DataFont454) as Graphics.FontReference);
            var local_Rez_Fonts_IconFont454 = (WatchUi.loadResource($.Rez.Fonts.IconFont454) as Graphics.FontReference);
            var rez_cmp_local_var_dc_getHeight = dc.getHeight();

            var rez_cmp_local_var_dc_getWidth = dc.getWidth();

            var rez_cmp_local_text_FieldDate = new WatchUi.Text({:identifier=>"FieldDate", :color=>Graphics.COLOR_BLUE, :locX=>(rez_cmp_local_var_dc_getWidth * (93 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (26 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>local_Rez_Fonts_DataFont454});

            var rez_cmp_local_text_FieldTime = new WatchUi.Text({:identifier=>"FieldTime", :locX=>(rez_cmp_local_var_dc_getWidth * (52.5 / 100.0)), :locY=>((rez_cmp_local_var_dc_getHeight - 208) * 0.5), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>local_Rez_Fonts_TimeFont454});

            var rez_cmp_local_text_FieldIcons = new WatchUi.Text({:identifier=>"FieldIcons", :color=>Graphics.COLOR_BLUE, :locX=>(rez_cmp_local_var_dc_getWidth * (93 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (65 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>local_Rez_Fonts_IconFont454});

            return [rez_cmp_local_text_FieldDate, rez_cmp_local_text_FieldTime, rez_cmp_local_text_FieldIcons] as Array<WatchUi.Drawable>;
        }

        function BatterySaveLight(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
            var local_Rez_Fonts_DataFont = (WatchUi.loadResource($.Rez.Fonts.DataFont) as Graphics.FontReference);
            var local_Rez_Fonts_TimeFont = (WatchUi.loadResource($.Rez.Fonts.TimeFont) as Graphics.FontReference);
            var local_Rez_Fonts_IconFont = (WatchUi.loadResource($.Rez.Fonts.IconFont) as Graphics.FontReference);
            var rez_cmp_local_var_dc_getHeight = dc.getHeight();

            var rez_cmp_local_var_dc_getWidth = dc.getWidth();

            var rez_cmp_local_custom_drawable_bGrondFillerWhite = new $.Rez.Drawables.bGrondFillerWhite();
            if (rez_cmp_local_custom_drawable_bGrondFillerWhite.identifier == null) {
                rez_cmp_local_custom_drawable_bGrondFillerWhite.identifier = "bGrondFillerWhite";
            }

            var rez_cmp_local_text_FieldDate = new WatchUi.Text({:identifier=>"FieldDate", :color=>Graphics.COLOR_BLUE, :locX=>(rez_cmp_local_var_dc_getWidth * (93 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (26 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>local_Rez_Fonts_DataFont});

            var rez_cmp_local_text_FieldTime = new WatchUi.Text({:identifier=>"FieldTime", :color=>Graphics.COLOR_BLACK, :locX=>(rez_cmp_local_var_dc_getWidth * (52.5 / 100.0)), :locY=>((rez_cmp_local_var_dc_getHeight - 130) * 0.5), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>local_Rez_Fonts_TimeFont});

            var rez_cmp_local_text_FieldIcons = new WatchUi.Text({:identifier=>"FieldIcons", :color=>Graphics.COLOR_BLUE, :locX=>(rez_cmp_local_var_dc_getWidth * (93 / 100.0)), :locY=>(rez_cmp_local_var_dc_getHeight * (65 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>local_Rez_Fonts_IconFont});

            return [rez_cmp_local_custom_drawable_bGrondFillerWhite, rez_cmp_local_text_FieldDate, rez_cmp_local_text_FieldTime, rez_cmp_local_text_FieldIcons] as Array<WatchUi.Drawable>;
        }
    } // Layouts

    module Strings {
        (:initialized) var AltimeterExt as ResourceId;
        (:initialized) var Altimeter as ResourceId;
        (:initialized) var BatterySave as ResourceId;
        (:initialized) var GraphSizeSmall as ResourceId;
        (:initialized) var FieldLowerLeft as ResourceId;
        (:initialized) var StressExt as ResourceId;
        (:initialized) var Battery as ResourceId;
        (:initialized) var StepsExt as ResourceId;
        (:initialized) var BodyBattery as ResourceId;
        (:initialized) var ShowGraph as ResourceId;
        (:initialized) var Floors as ResourceId;
        (:initialized) var Settings as ResourceId;
        (:initialized) var BatteryDays as ResourceId;
        (:initialized) var GraphSizeLarge as ResourceId;
        (:initialized) var SolarIntensity as ResourceId;
        (:initialized) var FieldBottom as ResourceId;
        (:initialized) var GraphSize as ResourceId;
        (:initialized) var SunEventSet as ResourceId;
        (:initialized) var Barometer as ResourceId;
        (:initialized) var CaloriesExt as ResourceId;
        (:initialized) var FieldLowerRight as ResourceId;
        (:initialized) var Notifications as ResourceId;
        (:initialized) var SunEvent as ResourceId;
        (:initialized) var BodyBatteryExt as ResourceId;
        (:initialized) var Steps as ResourceId;
        (:initialized) var SolarIntensityExt as ResourceId;
        (:initialized) var HeartRate as ResourceId;
        (:initialized) var Temperature as ResourceId;
        (:initialized) var DarkMode as ResourceId;
        (:initialized) var EmptyExt as ResourceId;
        (:initialized) var HeartRateExt as ResourceId;
        (:initialized) var ShowGraphfieldCatalog as ResourceId;
        (:initialized) var SunEventRise as ResourceId;
        (:initialized) var FieldUpperRight as ResourceId;
        (:initialized) var AppName as ResourceId;
        (:initialized) var FieldUpperLeft as ResourceId;
        (:initialized) var Empty as ResourceId;
        (:initialized) var ShowGraphAltimeter as ResourceId;
        (:initialized) var FieldUpperCenter as ResourceId;
        (:initialized) var FieldTop as ResourceId;
        (:initialized) var CalendarExt as ResourceId;
        (:initialized) var BatteryExt as ResourceId;
        (:initialized) var NotificationsExt as ResourceId;
        (:initialized) var Calendar as ResourceId;
        (:initialized) var ShowGraphHeartRate as ResourceId;
        (:initialized) var Stress as ResourceId;
        (:initialized) var Calories as ResourceId;
        (:initialized) var Weather as ResourceId;
        (:initialized) var TemperatureExt as ResourceId;
        (:initialized) var FieldLowerCenter as ResourceId;
        (:initialized) var BarometerExt as ResourceId;
        (:initialized) var FloorsExt as ResourceId;
        (:initialized) var ShowGraphPressure as ResourceId;
        (:initialized) var WeatherExt as ResourceId;
        (:initialized) var BatteryDaysExt as ResourceId;
        (:initialized) var SunEventExt as ResourceId;
    } // Strings

    module Styles {
        module prompt_font_enhanced_readability__body_with_title {
            const exclude as Boolean = true;
        } // prompt_font_enhanced_readability__body_with_title

        module system_size__menu_header {
            const width as Number = 454;
            const height as Number = 159;
        } // system_size__menu_header

        module system_loc__hint_button_left_bottom {
            const exclude as Boolean = true;
        } // system_loc__hint_button_left_bottom

        module prompt_font_enhanced_readability__body_no_title {
            const exclude as Boolean = true;
        } // prompt_font_enhanced_readability__body_no_title

        module prompt_loc__body_no_title {
            const x as Number = 34;
            const y as Number = 111;
        } // prompt_loc__body_no_title

        module system_icon_dark__about {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_dark__about.svg";
            const compress as String = "true";
            const dithering as String = "none";
            const automaticPalette as String = "true";
            const packingFormat as String = "png";
        } // system_icon_dark__about

        module system_icon_light__question {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_light__question.svg";
            const compress as String = "true";
            const dithering as String = "none";
            const automaticPalette as String = "true";
            const packingFormat as String = "png";
        } // system_icon_light__question

        module system_loc__hint_button_left_top {
            const exclude as Boolean = true;
        } // system_loc__hint_button_left_top

        module prompt_font__title {
            const justification = Graphics.TEXT_JUSTIFY_CENTER|Graphics.TEXT_JUSTIFY_VCENTER;
            const font = Graphics.FONT_XTINY;
        } // prompt_font__title

        module system_icon_dark__discard {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_dark__discard.svg";
            const compress as String = "true";
            const dithering as String = "none";
            const automaticPalette as String = "true";
            const packingFormat as String = "png";
        } // system_icon_dark__discard

        module system_size__menu_item {
            const width as Number = 454;
            const height as Number = 126;
        } // system_size__menu_item

        module system_color_dark__text {
            const color as Number = 0xFFFFFF;
            const background = Graphics.COLOR_TRANSPARENT;
        } // system_color_dark__text

        module system_icon_destructive__discard {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_destructive__discard.svg";
            const dithering as String = "none";
            const packingFormat as String = "png";
        } // system_icon_destructive__discard

        module system_icon_dark__hint_action_menu {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_dark__hint_action_menu.svg";
            const dithering as String = "none";
            const packingFormat as String = "png";
        } // system_icon_dark__hint_action_menu

        module prompt_size__title {
            const width as Number = 352;
            const height as Number = 81;
        } // prompt_size__title

        module confirmation_font__body {
            const justification = Graphics.TEXT_JUSTIFY_CENTER|Graphics.TEXT_JUSTIFY_VCENTER;
            const font = Graphics.FONT_TINY;
        } // confirmation_font__body

        module system_color_dark__background {
            const color as Number = 0x000000;
            const background as Number = 0x000000;
        } // system_color_dark__background

        module system_icon_destructive__hint_button_left_top {
            const exclude as Boolean = true;
        } // system_icon_destructive__hint_button_left_top

        module system_size__launch_icon {
            const scaleX as Number = 70;
            const scaleY as Number = 70;
            const scaleRelativeTo as String = "screen";
        } // system_size__launch_icon

        module confirmation_input__confirm {
            const y1 as Number = 362;
            const x1 as Number = 88;
            const y2 as Number = 454;
            const x2 as Number = 366;
        } // confirmation_input__confirm

        module prompt_font__body_with_title {
            const justification = Graphics.TEXT_JUSTIFY_CENTER;
            const font = Graphics.FONT_TINY;
        } // prompt_font__body_with_title

        module confirmation_loc__body {
            const x as Number = 34;
            const y as Number = 82;
        } // confirmation_loc__body

        module system_icon_destructive__hint_button_left_bottom {
            const exclude as Boolean = true;
        } // system_icon_destructive__hint_button_left_bottom

        module prompt_color_dark__background {
            const color as Number = 0x000000;
            const background as Number = 0x000000;
        } // prompt_color_dark__background

        module system_icon_destructive__hint_action_menu {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_destructive__hint_action_menu.svg";
            const dithering as String = "none";
            const packingFormat as String = "png";
        } // system_icon_destructive__hint_action_menu

        module system_loc__hint_action_menu {
            const x as Number = 393;
            const y as Number = 86;
        } // system_loc__hint_action_menu

        module confirmation_icon__hint_confirm {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/confirmation_icon__hint_completion.svg";
            const dithering as String = "none";
            const packingFormat as String = "png";
        } // confirmation_icon__hint_confirm

        module system_loc__hint_button_left_middle {
            const exclude as Boolean = true;
        } // system_loc__hint_button_left_middle

        module prompt_size__body_no_title {
            const width as Number = 386;
            const height as Number = 246;
        } // prompt_size__body_no_title

        module system_icon_light__hint_button_left_top {
            const exclude as Boolean = true;
        } // system_icon_light__hint_button_left_top

        module prompt_color_light__background {
            const color as Number = 0x000000;
            const background as Number = 0x000000;
        } // prompt_color_light__background

        module confirmation_input__delete {
            const y1 as Number = 0;
            const x1 as Number = 88;
            const y2 as Number = 97;
            const x2 as Number = 366;
        } // confirmation_input__delete

        module system_icon_dark__hint_button_left_top {
            const exclude as Boolean = true;
        } // system_icon_dark__hint_button_left_top

        module system_input__action_menu {
            const button = WatchUi.KEY_ENTER;
        } // system_input__action_menu

        module system_icon_light__save {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_light__save.svg";
            const compress as String = "true";
            const dithering as String = "none";
            const automaticPalette as String = "true";
            const packingFormat as String = "png";
        } // system_icon_light__save

        module prompt_color_light__body {
            const color as Number = 0xFFFFFF;
            const background = Graphics.COLOR_TRANSPARENT;
        } // prompt_color_light__body

        module system_loc__subwindow {
            const exclude as Boolean = true;
        } // system_loc__subwindow

        module system_icon_light__warning {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_light__warning.svg";
            const compress as String = "true";
            const dithering as String = "none";
            const automaticPalette as String = "true";
            const packingFormat as String = "png";
        } // system_icon_light__warning

        module confirmation_color_light__body {
            const color as Number = 0xFFFFFF;
            const background = Graphics.COLOR_TRANSPARENT;
        } // confirmation_color_light__body

        module confirmation_icon_light__hint_keep {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/confirmation_icon__hint_keep.svg";
            const dithering as String = "none";
            const packingFormat as String = "png";
        } // confirmation_icon_light__hint_keep

        module activity_color_light__background {
            const color as Number = 0x000000;
            const background as Number = 0x000000;
        } // activity_color_light__background

        module system_icon_positive__hint_button_right_top {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_positive__hint_button_right_top.svg";
            const dithering as String = "none";
        } // system_icon_positive__hint_button_right_top

        module system_size__screen {
            const width as Number = 454;
            const height as Number = 454;
        } // system_size__screen

        module system_icon_destructive__hint_button_right_bottom {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_destructive__hint_button_right_bottom.svg";
            const dithering as String = "none";
        } // system_icon_destructive__hint_button_right_bottom

        module system_color_light__background {
            const color as Number = 0x000000;
            const background as Number = 0x000000;
        } // system_color_light__background

        module system_icon_destructive__hint_button_right_top {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_destructive__hint_button_right_top.svg";
            const dithering as String = "none";
        } // system_icon_destructive__hint_button_right_top

        module confirmation_loc__hint_confirm {
            const x as Number = 227;
            const horizontalJustification as String = "center";
            const y as Number = 362;
        } // confirmation_loc__hint_confirm

        module activity_color_dark__text {
            const color as Number = 0xFFFFFF;
            const background = Graphics.COLOR_TRANSPARENT;
        } // activity_color_dark__text

        module confirmation_input__keep {
            const y1 as Number = 361;
            const x1 as Number = 106;
            const y2 as Number = 454;
            const x2 as Number = 348;
        } // confirmation_input__keep

        module prompt_loc__body_with_title {
            const x as Number = 34;
            const y as Number = 162;
        } // prompt_loc__body_with_title

        module system_icon_dark__search {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_dark__search.svg";
            const compress as String = "true";
            const dithering as String = "none";
            const automaticPalette as String = "true";
            const packingFormat as String = "png";
        } // system_icon_dark__search

        module activity_color_light__text {
            const color as Number = 0xFFFFFF;
            const background = Graphics.COLOR_TRANSPARENT;
        } // activity_color_light__text

        module confirmation_icon__hint_keep {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/confirmation_icon__hint_keep.svg";
            const dithering as String = "none";
            const packingFormat as String = "png";
        } // confirmation_icon__hint_keep

        module system_icon_dark__save {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_dark__save.svg";
            const compress as String = "true";
            const dithering as String = "none";
            const automaticPalette as String = "true";
            const packingFormat as String = "png";
        } // system_icon_dark__save

        module system_icon_destructive__hint_button_left_middle {
            const exclude as Boolean = true;
        } // system_icon_destructive__hint_button_left_middle

        module system_icon_light__search {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_light__search.svg";
            const compress as String = "true";
            const dithering as String = "none";
            const automaticPalette as String = "true";
            const packingFormat as String = "png";
        } // system_icon_light__search

        module system_icon_dark__hint_button_left_bottom {
            const exclude as Boolean = true;
        } // system_icon_dark__hint_button_left_bottom

        module system_icon_positive__hint_button_left_top {
            const exclude as Boolean = true;
        } // system_icon_positive__hint_button_left_top

        module system_loc__hint_button_right_bottom {
            const x as Number = 392;
            const y as Number = 302;
        } // system_loc__hint_button_right_bottom

        module confirmation_icon_dark__hint_reject {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/confirmation_icon__hint_reject.svg";
            const dithering as String = "none";
            const packingFormat as String = "png";
        } // confirmation_icon_dark__hint_reject

        module confirmation_color_dark__body {
            const color as Number = 0xFFFFFF;
            const background = Graphics.COLOR_TRANSPARENT;
        } // confirmation_color_dark__body

        module confirmation_icon_light__hint_confirm {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/confirmation_icon__hint_completion.svg";
            const dithering as String = "none";
            const packingFormat as String = "png";
        } // confirmation_icon_light__hint_confirm

        module prompt_color_dark__title {
            const color as Number = 0xFFFFFF;
            const background = Graphics.COLOR_TRANSPARENT;
        } // prompt_color_dark__title

        module system_icon_destructive__cancel {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_destructive__cancel.svg";
            const dithering as String = "none";
            const packingFormat as String = "png";
        } // system_icon_destructive__cancel

        module system_icon_light__hint_button_right_bottom {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_light__hint_button_right_bottom.svg";
            const dithering as String = "none";
        } // system_icon_light__hint_button_right_bottom

        module prompt_loc__title {
            const x as Number = 51;
            const y as Number = 91;
        } // prompt_loc__title

        module confirmation_font_enhanced_readability__body {
            const exclude as Boolean = true;
        } // confirmation_font_enhanced_readability__body

        module prompt_color_light__title {
            const color as Number = 0xFFFFFF;
            const background = Graphics.COLOR_TRANSPARENT;
        } // prompt_color_light__title

        module system_icon_dark__hint_button_right_top {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_dark__hint_button_right_top.svg";
            const dithering as String = "none";
        } // system_icon_dark__hint_button_right_top

        module system_icon_dark__hint_button_left_middle {
            const exclude as Boolean = true;
        } // system_icon_dark__hint_button_left_middle

        module confirmation_icon_dark__hint_keep {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/confirmation_icon__hint_keep.svg";
            const dithering as String = "none";
            const packingFormat as String = "png";
        } // confirmation_icon_dark__hint_keep

        module system_icon_light__cancel {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_light__cancel.svg";
            const compress as String = "true";
            const dithering as String = "none";
            const automaticPalette as String = "true";
            const packingFormat as String = "png";
        } // system_icon_light__cancel

        module confirmation_icon_light__hint_reject {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/confirmation_icon__hint_reject.svg";
            const dithering as String = "none";
            const packingFormat as String = "png";
        } // confirmation_icon_light__hint_reject

        module system_icon_light__about {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_light__about.svg";
            const compress as String = "true";
            const dithering as String = "none";
            const automaticPalette as String = "true";
            const packingFormat as String = "png";
        } // system_icon_light__about

        module system_size__toast_icon {
            const scaleX as Number = 40;
            const scaleY as Number = 40;
            const scaleRelativeTo as String = "screen";
        } // system_size__toast_icon

        module system_icon_dark__hint_button_right_middle {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_dark__hint_button_right_middle.svg";
            const dithering as String = "none";
        } // system_icon_dark__hint_button_right_middle

        module confirmation_icon__hint_reject {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/confirmation_icon__hint_reject.svg";
            const dithering as String = "none";
            const packingFormat as String = "png";
        } // confirmation_icon__hint_reject

        module system_icon_light__hint_action_menu {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_light__hint_action_menu.svg";
            const dithering as String = "none";
            const packingFormat as String = "png";
        } // system_icon_light__hint_action_menu

        module system_icon_light__hint_button_right_middle {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_light__hint_button_right_middle.svg";
            const dithering as String = "none";
        } // system_icon_light__hint_button_right_middle

        module system_icon_destructive__hint_button_right_middle {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_destructive__hint_button_right_middle.svg";
            const dithering as String = "none";
        } // system_icon_destructive__hint_button_right_middle

        module confirmation_loc__hint_reject {
            const x as Number = 227;
            const horizontalJustification as String = "center";
            const y as Number = 0;
        } // confirmation_loc__hint_reject

        module confirmation_icon_dark__hint_delete {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/confirmation_icon__hint_delete.svg";
            const dithering as String = "none";
            const packingFormat as String = "png";
        } // confirmation_icon_dark__hint_delete

        module activity_color_dark__background {
            const color as Number = 0x000000;
            const background as Number = 0x000000;
        } // activity_color_dark__background

        module system_icon_light__hint_button_left_bottom {
            const exclude as Boolean = true;
        } // system_icon_light__hint_button_left_bottom

        module system_icon_positive__hint_button_left_middle {
            const exclude as Boolean = true;
        } // system_icon_positive__hint_button_left_middle

        module system_size__menu_icon {
            const scaleX as Number = 48;
            const scaleY as Number = 48;
            const scaleRelativeTo as String = "screen";
        } // system_size__menu_icon

        module system_icon_destructive__warning {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_destructive__warning.svg";
            const dithering as String = "none";
            const packingFormat as String = "png";
        } // system_icon_destructive__warning

        module system_loc__hint_button_right_middle {
            const x as Number = 438;
            const y as Number = 188;
        } // system_loc__hint_button_right_middle

        module system_icon_dark__cancel {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_dark__cancel.svg";
            const compress as String = "true";
            const dithering as String = "none";
            const automaticPalette as String = "true";
            const packingFormat as String = "png";
        } // system_icon_dark__cancel

        module prompt_size__body_with_title {
            const width as Number = 386;
            const height as Number = 194;
        } // prompt_size__body_with_title

        module system_loc__hint_button_right_top {
            const x as Number = 393;
            const y as Number = 85;
        } // system_loc__hint_button_right_top

        module system_color_light__text {
            const color as Number = 0xFFFFFF;
            const background = Graphics.COLOR_TRANSPARENT;
        } // system_color_light__text

        module system_icon_light__check {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_light__check.svg";
            const compress as String = "true";
            const dithering as String = "none";
            const automaticPalette as String = "true";
            const packingFormat as String = "png";
        } // system_icon_light__check

        module confirmation_input__reject {
            const y1 as Number = 0;
            const x1 as Number = 88;
            const y2 as Number = 97;
            const x2 as Number = 366;
        } // confirmation_input__reject

        module system_icon_light__revert {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_light__revert.svg";
            const compress as String = "true";
            const dithering as String = "none";
            const automaticPalette as String = "true";
            const packingFormat as String = "png";
        } // system_icon_light__revert

        module system_size__subwindow {
            const exclude as Boolean = true;
        } // system_size__subwindow

        module system_icon_positive__hint_button_left_bottom {
            const exclude as Boolean = true;
        } // system_icon_positive__hint_button_left_bottom

        module system_icon_dark__check {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_dark__check.svg";
            const compress as String = "true";
            const dithering as String = "none";
            const automaticPalette as String = "true";
            const packingFormat as String = "png";
        } // system_icon_dark__check

        module confirmation_loc__hint_keep {
            const x as Number = 227;
            const horizontalJustification as String = "center";
            const y as Number = 361;
        } // confirmation_loc__hint_keep

        module confirmation_loc__hint_delete {
            const x as Number = 227;
            const horizontalJustification as String = "center";
            const y as Number = 0;
        } // confirmation_loc__hint_delete

        module system_icon_positive__hint_action_menu {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_positive__hint_action_menu.svg";
            const dithering as String = "none";
            const packingFormat as String = "png";
        } // system_icon_positive__hint_action_menu

        module system_icon_positive__hint_button_right_middle {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_positive__hint_button_right_middle.svg";
            const dithering as String = "none";
        } // system_icon_positive__hint_button_right_middle

        module system_icon_light__hint_button_left_middle {
            const exclude as Boolean = true;
        } // system_icon_light__hint_button_left_middle

        module system_icon_dark__hint_button_right_bottom {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_dark__hint_button_right_bottom.svg";
            const dithering as String = "none";
        } // system_icon_dark__hint_button_right_bottom

        module system_icon_positive__hint_button_right_bottom {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_positive__hint_button_right_bottom.svg";
            const dithering as String = "none";
        } // system_icon_positive__hint_button_right_bottom

        module system_icon_dark__revert {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_dark__revert.svg";
            const compress as String = "true";
            const dithering as String = "none";
            const automaticPalette as String = "true";
            const packingFormat as String = "png";
        } // system_icon_dark__revert

        module confirmation_icon_light__hint_delete {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/confirmation_icon__hint_delete.svg";
            const dithering as String = "none";
            const packingFormat as String = "png";
        } // confirmation_icon_light__hint_delete

        module system_icon_dark__question {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_dark__question.svg";
            const compress as String = "true";
            const dithering as String = "none";
            const automaticPalette as String = "true";
            const packingFormat as String = "png";
        } // system_icon_dark__question

        module system_icon_light__discard {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_light__discard.svg";
            const compress as String = "true";
            const dithering as String = "none";
            const automaticPalette as String = "true";
            const packingFormat as String = "png";
        } // system_icon_light__discard

        module device_info {
            const screenWidth as Number = 454;
            const screenShape = Toybox.System.SCREEN_SHAPE_ROUND;
            const hasNightMode as Boolean = false;
            const hasGpu as Boolean = true;
            const screenHeight as Number = 454;
            const hasTouchScreen as Boolean = true;
            const hasEnhancedReadabilityMode as Boolean = false;
        } // device_info

        module confirmation_icon_dark__hint_confirm {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/confirmation_icon__hint_completion.svg";
            const dithering as String = "none";
            const packingFormat as String = "png";
        } // confirmation_icon_dark__hint_confirm

        module prompt_font__body_no_title {
            const justification = Graphics.TEXT_JUSTIFY_CENTER|Graphics.TEXT_JUSTIFY_VCENTER;
            const font = Graphics.FONT_TINY;
        } // prompt_font__body_no_title

        module prompt_size__title_icon {
            const scaleX as Float = 0.14;
            const scaleRelativeTo as String = "screen";
        } // prompt_size__title_icon

        module system_icon_dark__warning {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_dark__warning.svg";
            const compress as String = "true";
            const dithering as String = "none";
            const automaticPalette as String = "true";
            const packingFormat as String = "png";
        } // system_icon_dark__warning

        module prompt_loc__title_icon {
            const x as Number = 227;
            const y as Number = 42;
            const horizontalJustification as String = "center";
            const verticalJustification as String = "center";
        } // prompt_loc__title_icon

        module prompt_font_enhanced_readability__title {
            const exclude as Boolean = true;
        } // prompt_font_enhanced_readability__title

        module prompt_color_dark__body {
            const color as Number = 0xFFFFFF;
            const background = Graphics.COLOR_TRANSPARENT;
        } // prompt_color_dark__body

        module confirmation_icon__hint_delete {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/confirmation_icon__hint_delete.svg";
            const dithering as String = "none";
            const packingFormat as String = "png";
        } // confirmation_icon__hint_delete

        module system_icon_light__hint_button_right_top {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_light__hint_button_right_top.svg";
            const dithering as String = "none";
        } // system_icon_light__hint_button_right_top

        module confirmation_size__body {
            const width as Number = 386;
            const height as Number = 257;
        } // confirmation_size__body

        module system_icon_positive__check {
            const filename as String = "/Users/mattia/Library/Application Support/Garmin/ConnectIQ/Devices/approachs7047mm/system_icon_positive__check.svg";
            const dithering as String = "none";
            const packingFormat as String = "png";
        } // system_icon_positive__check
    } // Styles
} // Rez
